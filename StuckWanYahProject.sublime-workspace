{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"acc",
				"accessToken"
			],
			[
				"image",
				"images"
			],
			[
				"getUser",
				"getUserProfilePicture"
			],
			[
				"pro",
				"profile"
			],
			[
				"user",
				"userId"
			],
			[
				"find",
				"findOne"
			],
			[
				"s",
				"src\tAttr"
			],
			[
				"ob",
				"obj"
			],
			[
				"calc",
				"calcAge"
			],
			[
				"res",
				"result"
			],
			[
				"param",
				"params"
			],
			[
				"err",
				"error"
			],
			[
				"perfo",
				"performRequest"
			],
			[
				"body",
				"bodyObj"
			],
			[
				"mee",
				"message"
			],
			[
				"par",
				"parseurl"
			],
			[
				"me",
				"message"
			],
			[
				"bo",
				"Body"
			],
			[
				"for",
				"for\tfor (…) {…}"
			],
			[
				"bod",
				"bodyObj"
			],
			[
				"re",
				"response"
			],
			[
				"checkUserExistance",
				"checkUserExistanceOnFb"
			],
			[
				"publ",
				"public_profile"
			],
			[
				"ceck",
				"checkUserExistance"
			],
			[
				"file",
				"filename"
			],
			[
				"Face",
				"facebookStatusCodes"
			],
			[
				"conne",
				"connected"
			],
			[
				"use",
				"userId"
			],
			[
				"faceboo",
				"facebookHandle"
			],
			[
				"statu",
				"statusText"
			],
			[
				"au",
				"authResponse"
			],
			[
				"clie",
				"clientSecret"
			],
			[
				"clien",
				"clientID"
			],
			[
				"cal",
				"callbackURL"
			],
			[
				"tes",
				"testDbURL"
			],
			[
				"mog",
				"mongodb"
			],
			[
				"sta",
				"statusChangeCallback"
			],
			[
				"new",
				"newPhoto"
			],
			[
				"val",
				"value"
			],
			[
				"pho",
				"photos"
			],
			[
				"photo",
				"photo"
			],
			[
				"age",
				"age_range"
			],
			[
				"las",
				"last_name"
			],
			[
				"first",
				"first_name"
			],
			[
				"data",
				"data"
			],
			[
				"profile",
				"profile"
			],
			[
				"ex",
				"expires"
			],
			[
				"cons",
				"console"
			],
			[
				"auth",
				"authResponse"
			],
			[
				"log",
				"login"
			],
			[
				"conn",
				"connected"
			],
			[
				"if",
				"if\tif"
			],
			[
				"funnc",
				"function"
			],
			[
				"min",
				"minIndex"
			],
			[
				"face",
				"facebook_friends"
			],
			[
				"frien",
				"facebook_friends"
			],
			[
				"Form",
				"submitForm"
			],
			[
				"a",
				"ajax"
			],
			[
				"stat",
				"statics"
			],
			[
				"dat",
				"data"
			],
			[
				"con",
				"console"
			],
			[
				"getC",
				"getCurrentUser"
			],
			[
				"is",
				"is_blocked"
			],
			[
				"get",
				"getTwoRandomPhotos"
			],
			[
				"u",
				"unique"
			],
			[
				"Mon",
				"MongoClient"
			],
			[
				"mongo",
				"mongodb"
			],
			[
				"json",
				"jsonfile"
			],
			[
				"top",
				"topTenWinings"
			],
			[
				"succe",
				"success"
			],
			[
				"per",
				"performanceRating"
			],
			[
				"playe",
				"player1"
			],
			[
				"player",
				"player2"
			],
			[
				"plaer",
				"player1"
			],
			[
				"loser",
				"loser_draws_arr"
			],
			[
				"winner",
				"winner_draws_arr"
			],
			[
				"len",
				"length"
			],
			[
				"obj",
				"object"
			],
			[
				"req",
				"req"
			],
			[
				"gener",
				"gender"
			],
			[
				"win",
				"wins"
			],
			[
				"retu",
				"returned"
			],
			[
				"mac",
				"match"
			],
			[
				"f",
				"fi\t<%= Fixtures.identify(:symbol) %>"
			],
			[
				"pla",
				"player1"
			],
			[
				"next",
				"nextElementSibling"
			],
			[
				"inn",
				"innerText"
			],
			[
				"app",
				"appendChild"
			],
			[
				"count",
				"counter_number"
			],
			[
				"com",
				"comma"
			],
			[
				"coun",
				"counter_number"
			],
			[
				"imae",
				"image_id"
			],
			[
				"challe",
				"challengers"
			],
			[
				"in",
				"input\tTag"
			],
			[
				"d",
				"delete"
			],
			[
				"vo",
				"voter"
			],
			[
				"hr",
				"herokuapp"
			],
			[
				"http",
				"https"
			],
			[
				"base",
				"baseUrl"
			],
			[
				"clas",
				"className"
			],
			[
				"cou",
				"counter_number"
			],
			[
				"getEle",
				"getElementsByTagName"
			],
			[
				"Stuck",
				"StuckWanYah"
			],
			[
				"faceb",
				"Facebook"
			],
			[
				"loca",
				"location"
			],
			[
				"stuc",
				"stuckwanyah"
			],
			[
				"fac",
				"connect_facebook"
			],
			[
				"fb_",
				"fb_app_secret"
			],
			[
				"conf",
				"CONFIG"
			],
			[
				"fi",
				"field"
			],
			[
				"getM",
				"getMediaOptions"
			],
			[
				"wns",
				"wins"
			],
			[
				"result",
				"results"
			],
			[
				"player_",
				"player_1"
			],
			[
				"call",
				"callback"
			],
			[
				"para",
				"parallel"
			],
			[
				"player_1",
				"player_1_score"
			],
			[
				"tie",
				"tieBreaker"
			],
			[
				"succ",
				"success"
			],
			[
				"winer",
				"winner"
			],
			[
				"winner_",
				"winner_loses_arr"
			],
			[
				"w",
				"winner"
			],
			[
				"lose",
				"losses"
			],
			[
				"wii",
				"winning"
			],
			[
				"rat",
				"ratings"
			],
			[
				"strin",
				"stringify"
			],
			[
				"local",
				"localhost"
			],
			[
				"dataf",
				"data-fb-id"
			]
		]
	},
	"buffers":
	[
		{
			"file": "server.js",
			"settings":
			{
				"buffer_size": 86520,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					112,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAgAAAJUEAAAAAAAAmgQAAAAAAAAAAAAAAADwv84EAAAAAAAA0wQAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 2131,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABTCAAAewogICJuYW1lIjogIlN0dWNrV2FuWWFoIiwKICAidmVyc2lvbiI6ICIxLjAuMCIsCiAgImRlc2NyaXB0aW9uIjogIk15IHJldmFtcCB2ZXJzaW9uIG9mIEZhY2VtYXNoLCB3ZWJzaXRlIGNyZWF0ZWQgYnkgTWFyayBadWNrZXJiZXJnIGZvciByYXRpbmcgcGVvcGxlIGJhc2VkIG9uIHRoZWlyIGxvb2tzIiwKICAicHJpdmF0ZSI6IHRydWUsCiAgIm1haW4iOiAic2VydmVyLmpzIiwKICAic2NyaXB0cyI6IHsKICAgICJzdGFydCI6ICJub2RlIHNlcnZlci5qcyIsCiAgICAiZGV2IjogIm5vZGVtb24gc2VydmVyLmpzIiwKICAgICJ0ZXN0IjogImh0dHAtc2VydmVyIC0tc3NsIC1jLTEgLXAgNTAwMCAtYSAxMjcuMC4wLjEiCiAgfSwKICAicmVwb3NpdG9yeSI6ICJnaXQraHR0cHM6Ly9naXRodWIuY29tL2NocmlzYXVndS9zdHVja3dhbnlhaC5naXQiLAogICJrZXl3b3JkcyI6IFsKICAgICJzdHVjayB3YW4iLAogICAgInN0dWNrIHdhbiB5YWgiLAogICAgInJhdGluZyBwaWN0dXJlcyIsCiAgICAiaG90IGJveXMiLAogICAgImhvdCBnaXJscyIsCiAgICAiZGF0IHdhbiBob3ciLAogICAgInZvdGUgZm9yIHdobydzIGhvdHRlciIsCiAgICAiZmFjZW1hc2giLAogICAgInJhdGluZyBwZW9wbGUncyBwaWN0dXJlcyIsCiAgICAibm9kZSIsCiAgICAiZXhwcmVzcyIKICBdLAogICJob21lcGFnZSI6ICJodHRwczovL2dpdGh1Yi5jb20vY2hyaXNhdWd1L3N0dWNrd2FueWFoIiwKICAiYXV0aG9yIjogIkNocmlzdGlhbiBBdWd1c3R5biA8Y2hyaXNhdWd1NjFAZ21haWwuY29tPiIsCiAgImxpY2Vuc2UiOiAiTUlUIiwKICAiYnVncyI6IHsKICAgICJ1cmwiOiAiaHR0cHM6Ly9naXRodWIuY29tL2NocmlzYXVndS9zdHVja3dhbnlhaC9pc3N1ZXMiCiAgfSwKICAiZGVwZW5kZW5jaWVzIjogewogICAgImFycGFkIjogIl4xLjAuMiIsCiAgICAiYXJyYXktdW5pcXVlIjogIioiLAogICAgImFzeW5jIjogIl4xLjUuMiIsCiAgICAiYm9keS1wYXJzZXIiOiAifjEuMTguMiIsCiAgICAiY29sb3JzIjogIl4xLjQuMCIsCiAgICAiY29ubmVjdC1yZWRpcyI6ICJeNC4wLjQiLAogICAgImNvb2tpZS1wYXJzZXIiOiAifjEuMy4zIiwKICAgICJjb29raWUtc2Vzc2lvbiI6ICJeMi4wLjAtYmV0YS4zIiwKICAgICJjb3JzIjogIl4yLjguNSIsCiAgICAiY3J5cHRvLWpzIjogIl4zLjEuOS0xIiwKICAgICJlanMiOiAifj4gMi41LjUiLAogICAgImV4cHJlc3MiOiAiNC4xNi4yIiwKICAgICJleHByZXNzLWp3dCI6ICIqIiwKICAgICJleHByZXNzLXNlc3Npb24iOiAiKiIsCiAgICAiZXhwcmVzcy11c2VyYWdlbnQiOiAiXjEuMC4xNSIsCiAgICAiZmF2aWNvbiI6ICIqIiwKICAgICJmcyI6ICJeMC4wLjEtc2VjdXJpdHkiLAogICAgImh0dHAiOiAiKiIsCiAgICAiaHR0cC1zZXJ2ZXIiOiAiXjAuMTIuMSIsCiAgICAiand0LXNpbXBsZSI6ICIqIiwKICAgICJsb2Rhc2gubWVyZ2UiOiAiXjQuNi4yIiwKICAgICJsb2ctc3ltYm9scyI6ICJeNC4wLjAiLAogICAgIm1lcmdlIjogIl4xLjIuMSIsCiAgICAibWV0aG9kLW92ZXJyaWRlIjogIj49Mi4zLjEwIiwKICAgICJtb21lbnQiOiAiXjIuMjkuMSIsCiAgICAibW9uZ29vc2UiOiAiXjUuOS4xNCIsCiAgICAibW9uZ29vc2UtcmFuZG9tIjogIl4wLjEuMSIsCiAgICAibW9uZ29vc2Utc2ltcGxlLXJhbmRvbSI6ICIqIiwKICAgICJub2RlLXJlc3RmdWwiOiAiKiIsCiAgICAib3BlbiI6ICI+PTYuMC4wIiwKICAgICJwYXJzZXVybCI6ICIqIiwKICAgICJwYXNzcG9ydCI6ICIqIiwKICAgICJwYXNzcG9ydC1mYWNlYm9vayI6ICJeMi4xLjEiLAogICAgInBhc3Nwb3J0LWZhY2Vib29rLXRva2VuIjogIl4zLjMuMCIsCiAgICAicGF0aCI6ICIqIiwKICAgICJwcm9taXNlIjogIioiLAogICAgInJlZGlzIjogIl4zLjAuMiIsCiAgICAicmVxdWVzdCI6ICJeMi44My4wIiwKICAgICJyZXF1ZXN0LXByb21pc2UiOiAiXjQuMi4yIiwKICAgICJzZXJ2ZS1mYXZpY29uIjogIioiLAogICAgInVuZGVyc2NvcmUiOiAiXjEuMTMuMSIsCiAgICAieG1sMmpzIjogIl4wLjQuMjMiCiAgfSwKICAiZGV2RGVwZW5kZW5jaWVzIjogewogICAgImRvdGVudiI6ICJeNS4wLjEiLAogICAgIm1vcmdhbiI6ICJeMS4xMC4wIiwKICAgICJub2RlbW9uIjogIioiCiAgfQp9CgAAAAAAAAAAXAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJACAAAAAAAAkAIAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABcCAAAewogICJuYW1lIjogIlN0dWNrV2FuWWFoIiwKICAidmVyc2lvbiI6ICIxLjAuMCIsCiAgImRlc2NyaXB0aW9uIjogIk15IHJldmFtcCB2ZXJzaW9uIG9mIEZhY2VtYXNoLCB3ZWJzaXRlIGNyZWF0ZWQgYnkgTWFyayBadWNrZXJiZXJnIGZvciByYXRpbmcgcGVvcGxlIGJhc2VkIG9uIHRoZWlyIGxvb2tzIiwKICAicHJpdmF0ZSI6IHRydWUsCiAgIm1haW4iOiAic2VydmVyLmpzIiwKICAiZW5naW5lcyI6IHsKICAgICJub2RlIjogInYxMi54IiwKICAgICJucG0iOiAiNy54IgogIH0sCiAgInNjcmlwdHMiOiB7CiAgICAic3RhcnQiOiAibm9kZSBzZXJ2ZXIuanMiLAogICAgImRldiI6ICJub2RlbW9uIHNlcnZlci5qcyIsCiAgICAidGVzdCI6ICJodHRwLXNlcnZlciAtLXNzbCAtYy0xIC1wIDUwMDAgLWEgMTI3LjAuMC4xIgogIH0sCiAgInJlcG9zaXRvcnkiOiAiZ2l0K2h0dHBzOi8vZ2l0aHViLmNvbS9jaHJpc2F1Z3Uvc3R1Y2t3YW55YWguZ2l0IiwKICAia2V5d29yZHMiOiBbCiAgICAic3R1Y2sgd2FuIiwKICAgICJzdHVjayB3YW4geWFoIiwKICAgICJyYXRpbmcgcGljdHVyZXMiLAogICAgImhvdCBib3lzIiwKICAgICJob3QgZ2lybHMiLAogICAgImRhdCB3YW4gaG93IiwKICAgICJ2b3RlIGZvciB3aG8ncyBob3R0ZXIiLAogICAgImZhY2VtYXNoIiwKICAgICJyYXRpbmcgcGVvcGxlJ3MgcGljdHVyZXMiLAogICAgIm5vZGUiLAogICAgImV4cHJlc3MiCiAgXSwKICAiaG9tZXBhZ2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL2NocmlzYXVndS9zdHVja3dhbnlhaCIsCiAgImF1dGhvciI6ICJDaHJpc3RpYW4gQXVndXN0eW4gPGNocmlzYXVndTYxQGdtYWlsLmNvbT4iLAogICJsaWNlbnNlIjogIk1JVCIsCiAgImJ1Z3MiOiB7CiAgICAidXJsIjogImh0dHBzOi8vZ2l0aHViLmNvbS9jaHJpc2F1Z3Uvc3R1Y2t3YW55YWgvaXNzdWVzIgogIH0sCiAgImRlcGVuZGVuY2llcyI6IHsKICAgICJhcnBhZCI6ICJeMS4wLjIiLAogICAgImFycmF5LXVuaXF1ZSI6ICIqIiwKICAgICJhc3luYyI6ICJeMS40LjAiLAogICAgImJvZHktcGFyc2VyIjogIn4xLjE4LjIiLAogICAgImNvbG9ycyI6ICIqIiwKICAgICJjb25uZWN0LXJlZGlzIjogIl40LjAuNCIsCiAgICAiY29va2llLXBhcnNlciI6ICJ+MS4zLjMiLAogICAgImNvb2tpZS1zZXNzaW9uIjogIl4yLjAuMC1iZXRhLjMiLAogICAgImNvcnMiOiAiXjIuOC4zIiwKICAgICJjcnlwdG8tanMiOiAiXjMuMS45LTEiLAogICAgImVqcyI6ICJ+PiAyLjUuNSIsCiAgICAiZXhwcmVzcyI6ICI0LjE2LjIiLAogICAgImV4cHJlc3Mtand0IjogIioiLAogICAgImV4cHJlc3Mtc2Vzc2lvbiI6ICIqIiwKICAgICJleHByZXNzLXVzZXJhZ2VudCI6ICJeMS4wLjE1IiwKICAgICJmYXZpY29uIjogIioiLAogICAgImZzIjogIioiLAogICAgImh0dHAiOiAiKiIsCiAgICAiaHR0cC1zZXJ2ZXIiOiAiXjAuMTIuMSIsCiAgICAiand0LXNpbXBsZSI6ICIqIiwKICAgICJsb2Rhc2gubWVyZ2UiOiAiXjQuNi4yIiwKICAgICJsb2ctc3ltYm9scyI6ICIqIiwKICAgICJtZXJnZSI6ICJeMS4yLjEiLAogICAgIm1ldGhvZC1vdmVycmlkZSI6ICI+PTIuMy4xMCIsCiAgICAibW9tZW50IjogIl4yLjI5LjEiLAogICAgIm1vbmdvb3NlIjogIl41LjkuMTQiLAogICAgIm1vbmdvb3NlLXJhbmRvbSI6ICJeMC4xLjEiLAogICAgIm1vbmdvb3NlLXNpbXBsZS1yYW5kb20iOiAiKiIsCiAgICAibm9kZS1yZXN0ZnVsIjogIioiLAogICAgIm9wZW4iOiAiPj02LjAuMCIsCiAgICAicGFyc2V1cmwiOiAiKiIsCiAgICAicGFzc3BvcnQiOiAiKiIsCiAgICAicGFzc3BvcnQtZmFjZWJvb2siOiAiXjIuMS4xIiwKICAgICJwYXNzcG9ydC1mYWNlYm9vay10b2tlbiI6ICJeMy4zLjAiLAogICAgInBhdGgiOiAiKiIsCiAgICAicHJvbWlzZSI6ICIqIiwKICAgICJyZWRpcyI6ICJeMy4wLjIiLAogICAgInJlcXVlc3QiOiAiXjIuODMuMCIsCiAgICAicmVxdWVzdC1wcm9taXNlIjogIl40LjIuMiIsCiAgICAic2VydmUtZmF2aWNvbiI6ICIqIiwKICAgICJ1bmRlcnNjb3JlIjogIl4xLjEzLjEiCiAgfSwKICAiZGV2RGVwZW5kZW5jaWVzIjogewogICAgImRvdGVudiI6ICJeNS4wLjEiLAogICAgIm1vcmdhbiI6ICJeMS4xMC4wIiwKICAgICJub2RlbW9uIjogIioiCiAgfQp9CgAAAAAAAAAACwgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJACAAAAAAAAkAIAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAALCAAAewogICJuYW1lIjogIlN0dWNrV2FuWWFoIiwKICAidmVyc2lvbiI6ICIxLjAuMCIsCiAgImRlc2NyaXB0aW9uIjogIk15IHJldmFtcCB2ZXJzaW9uIG9mIEZhY2VtYXNoLCB3ZWJzaXRlIGNyZWF0ZWQgYnkgTWFyayBadWNrZXJiZXJnIGZvciByYXRpbmcgcGVvcGxlIGJhc2VkIG9uIHRoZWlyIGxvb2tzIiwKICAicHJpdmF0ZSI6IHRydWUsCiAgIm1haW4iOiAic2VydmVyLmpzIiwKICAiZW5naW5lcyI6IHsKICAgICJub2RlIjogInYxMi54IiwKICAgICJucG0iOiAiNy54IgogIH0sCiAgInNjcmlwdHMiOiB7CiAgICAic3RhcnQiOiAibm9kZW1vbiBzZXJ2ZXIuanMiLAogICAgInRlc3QiOiAiaHR0cC1zZXJ2ZXIgLS1zc2wgLWMtMSAtcCA1MDAwIC1hIDEyNy4wLjAuMSIKICB9LAogICJyZXBvc2l0b3J5IjogImdpdCtodHRwczovL2dpdGh1Yi5jb20vY2hyaXNhdWd1L3N0dWNrd2FueWFoLmdpdCIsCiAgImtleXdvcmRzIjogWwogICAgInN0dWNrIHdhbiIsCiAgICAic3R1Y2sgd2FuIHlhaCIsCiAgICAicmF0aW5nIHBpY3R1cmVzIiwKICAgICJob3QgYm95cyIsCiAgICAiaG90IGdpcmxzIiwKICAgICJkYXQgd2FuIGhvdyIsCiAgICAidm90ZSBmb3Igd2hvJ3MgaG90dGVyIiwKICAgICJmYWNlbWFzaCIsCiAgICAicmF0aW5nIHBlb3BsZSdzIHBpY3R1cmVzIiwKICAgICJub2RlIiwKICAgICJleHByZXNzIgogIF0sCiAgImhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9jaHJpc2F1Z3Uvc3R1Y2t3YW55YWgiLAogICJhdXRob3IiOiAiQ2hyaXN0aWFuIEF1Z3VzdHluIDxjaHJpc2F1Z3U2MUBnbWFpbC5jb20+IiwKICAibGljZW5zZSI6ICJNSVQiLAogICJidWdzIjogewogICAgInVybCI6ICJodHRwczovL2dpdGh1Yi5jb20vY2hyaXNhdWd1L3N0dWNrd2FueWFoL2lzc3VlcyIKICB9LAogICJkZXBlbmRlbmNpZXMiOiB7CiAgICAiYXJwYWQiOiAiXjEuMC4yIiwKICAgICJhcnJheS11bmlxdWUiOiAiKiIsCiAgICAiYXN5bmMiOiAiXjEuNC4wIiwKICAgICJib2R5LXBhcnNlciI6ICJ+MS4xOC4yIiwKICAgICJjb2xvcnMiOiAiKiIsCiAgICAiY29ubmVjdC1yZWRpcyI6ICJeNC4wLjQiLAogICAgImNvb2tpZS1wYXJzZXIiOiAifjEuMy4zIiwKICAgICJjb29raWUtc2Vzc2lvbiI6ICJeMi4wLjAtYmV0YS4zIiwKICAgICJjb3JzIjogIl4yLjguMyIsCiAgICAiY3J5cHRvLWpzIjogIl4zLjEuOS0xIiwKICAgICJkb3RlbnYiOiAiXjUuMC4xIiwKICAgICJlanMiOiAifj4gMi41LjUiLAogICAgImV4cHJlc3MiOiAiNC4xNi4yIiwKICAgICJleHByZXNzLWp3dCI6ICIqIiwKICAgICJleHByZXNzLXNlc3Npb24iOiAiKiIsCiAgICAiZXhwcmVzcy11c2VyYWdlbnQiOiAiXjEuMC4xNSIsCiAgICAiZmF2aWNvbiI6ICIqIiwKICAgICJmcyI6ICIqIiwKICAgICJodHRwIjogIioiLAogICAgImh0dHAtc2VydmVyIjogIl4wLjEyLjEiLAogICAgImp3dC1zaW1wbGUiOiAiKiIsCiAgICAibG9kYXNoLm1lcmdlIjogIl40LjYuMiIsCiAgICAibG9nLXN5bWJvbHMiOiAiKiIsCiAgICAibWVyZ2UiOiAiXjEuMi4xIiwKICAgICJtZXRob2Qtb3ZlcnJpZGUiOiAiPj0yLjMuMTAiLAogICAgIm1vbWVudCI6ICJeMi4yOS4xIiwKICAgICJtb25nb29zZSI6ICJeNS45LjE0IiwKICAgICJtb25nb29zZS1yYW5kb20iOiAiXjAuMS4xIiwKICAgICJtb25nb29zZS1zaW1wbGUtcmFuZG9tIjogIioiLAogICAgIm5vZGUtcmVzdGZ1bCI6ICIqIiwKICAgICJub2RlbW9uIjogIioiLAogICAgIm9wZW4iOiAiPj02LjAuMCIsCiAgICAicGFyc2V1cmwiOiAiKiIsCiAgICAicGFzc3BvcnQiOiAiKiIsCiAgICAicGFzc3BvcnQtZmFjZWJvb2siOiAiXjIuMS4xIiwKICAgICJwYXNzcG9ydC1mYWNlYm9vay10b2tlbiI6ICJeMy4zLjAiLAogICAgInBhdGgiOiAiKiIsCiAgICAicHJvbWlzZSI6ICIqIiwKICAgICJyZWRpcyI6ICJeMy4wLjIiLAogICAgInJlcXVlc3QiOiAiXjIuODMuMCIsCiAgICAicmVxdWVzdC1wcm9taXNlIjogIl40LjIuMiIsCiAgICAic2VydmUtZmF2aWNvbiI6ICIqIiwKICAgICJ1bmRlcnNjb3JlIjogIl4xLjEzLjEiCiAgfQp9CgAAAAAAAAAAUwgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJACAAAAAAAAkAIAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABTCAAAewogICJuYW1lIjogIlN0dWNrV2FuWWFoIiwKICAidmVyc2lvbiI6ICIxLjAuMCIsCiAgImRlc2NyaXB0aW9uIjogIk15IHJldmFtcCB2ZXJzaW9uIG9mIEZhY2VtYXNoLCB3ZWJzaXRlIGNyZWF0ZWQgYnkgTWFyayBadWNrZXJiZXJnIGZvciByYXRpbmcgcGVvcGxlIGJhc2VkIG9uIHRoZWlyIGxvb2tzIiwKICAicHJpdmF0ZSI6IHRydWUsCiAgIm1haW4iOiAic2VydmVyLmpzIiwKICAic2NyaXB0cyI6IHsKICAgICJzdGFydCI6ICJub2RlIHNlcnZlci5qcyIsCiAgICAiZGV2IjogIm5vZGVtb24gc2VydmVyLmpzIiwKICAgICJ0ZXN0IjogImh0dHAtc2VydmVyIC0tc3NsIC1jLTEgLXAgNTAwMCAtYSAxMjcuMC4wLjEiCiAgfSwKICAicmVwb3NpdG9yeSI6ICJnaXQraHR0cHM6Ly9naXRodWIuY29tL2NocmlzYXVndS9zdHVja3dhbnlhaC5naXQiLAogICJrZXl3b3JkcyI6IFsKICAgICJzdHVjayB3YW4iLAogICAgInN0dWNrIHdhbiB5YWgiLAogICAgInJhdGluZyBwaWN0dXJlcyIsCiAgICAiaG90IGJveXMiLAogICAgImhvdCBnaXJscyIsCiAgICAiZGF0IHdhbiBob3ciLAogICAgInZvdGUgZm9yIHdobydzIGhvdHRlciIsCiAgICAiZmFjZW1hc2giLAogICAgInJhdGluZyBwZW9wbGUncyBwaWN0dXJlcyIsCiAgICAibm9kZSIsCiAgICAiZXhwcmVzcyIKICBdLAogICJob21lcGFnZSI6ICJodHRwczovL2dpdGh1Yi5jb20vY2hyaXNhdWd1L3N0dWNrd2FueWFoIiwKICAiYXV0aG9yIjogIkNocmlzdGlhbiBBdWd1c3R5biA8Y2hyaXNhdWd1NjFAZ21haWwuY29tPiIsCiAgImxpY2Vuc2UiOiAiTUlUIiwKICAiYnVncyI6IHsKICAgICJ1cmwiOiAiaHR0cHM6Ly9naXRodWIuY29tL2NocmlzYXVndS9zdHVja3dhbnlhaC9pc3N1ZXMiCiAgfSwKICAiZGVwZW5kZW5jaWVzIjogewogICAgImFycGFkIjogIl4xLjAuMiIsCiAgICAiYXJyYXktdW5pcXVlIjogIioiLAogICAgImFzeW5jIjogIl4xLjUuMiIsCiAgICAiYm9keS1wYXJzZXIiOiAifjEuMTguMiIsCiAgICAiY29sb3JzIjogIl4xLjQuMCIsCiAgICAiY29ubmVjdC1yZWRpcyI6ICJeNC4wLjQiLAogICAgImNvb2tpZS1wYXJzZXIiOiAifjEuMy4zIiwKICAgICJjb29raWUtc2Vzc2lvbiI6ICJeMi4wLjAtYmV0YS4zIiwKICAgICJjb3JzIjogIl4yLjguNSIsCiAgICAiY3J5cHRvLWpzIjogIl4zLjEuOS0xIiwKICAgICJlanMiOiAifj4gMi41LjUiLAogICAgImV4cHJlc3MiOiAiNC4xNi4yIiwKICAgICJleHByZXNzLWp3dCI6ICIqIiwKICAgICJleHByZXNzLXNlc3Npb24iOiAiKiIsCiAgICAiZXhwcmVzcy11c2VyYWdlbnQiOiAiXjEuMC4xNSIsCiAgICAiZmF2aWNvbiI6ICIqIiwKICAgICJmcyI6ICJeMC4wLjEtc2VjdXJpdHkiLAogICAgImh0dHAiOiAiKiIsCiAgICAiaHR0cC1zZXJ2ZXIiOiAiXjAuMTIuMSIsCiAgICAiand0LXNpbXBsZSI6ICIqIiwKICAgICJsb2Rhc2gubWVyZ2UiOiAiXjQuNi4yIiwKICAgICJsb2ctc3ltYm9scyI6ICJeNC4wLjAiLAogICAgIm1lcmdlIjogIl4xLjIuMSIsCiAgICAibWV0aG9kLW92ZXJyaWRlIjogIj49Mi4zLjEwIiwKICAgICJtb21lbnQiOiAiXjIuMjkuMSIsCiAgICAibW9uZ29vc2UiOiAiXjUuOS4xNCIsCiAgICAibW9uZ29vc2UtcmFuZG9tIjogIl4wLjEuMSIsCiAgICAibW9uZ29vc2Utc2ltcGxlLXJhbmRvbSI6ICIqIiwKICAgICJub2RlLXJlc3RmdWwiOiAiKiIsCiAgICAib3BlbiI6ICI+PTYuMC4wIiwKICAgICJwYXJzZXVybCI6ICIqIiwKICAgICJwYXNzcG9ydCI6ICIqIiwKICAgICJwYXNzcG9ydC1mYWNlYm9vayI6ICJeMi4xLjEiLAogICAgInBhc3Nwb3J0LWZhY2Vib29rLXRva2VuIjogIl4zLjMuMCIsCiAgICAicGF0aCI6ICIqIiwKICAgICJwcm9taXNlIjogIioiLAogICAgInJlZGlzIjogIl4zLjAuMiIsCiAgICAicmVxdWVzdCI6ICJeMi44My4wIiwKICAgICJyZXF1ZXN0LXByb21pc2UiOiAiXjQuMi4yIiwKICAgICJzZXJ2ZS1mYXZpY29uIjogIioiLAogICAgInVuZGVyc2NvcmUiOiAiXjEuMTMuMSIsCiAgICAieG1sMmpzIjogIl4wLjQuMjMiCiAgfSwKICAiZGV2RGVwZW5kZW5jaWVzIjogewogICAgImRvdGVudiI6ICJeNS4wLjEiLAogICAgIm1vcmdhbiI6ICJeMS4xMC4wIiwKICAgICJub2RlbW9uIjogIioiCiAgfQp9CgAAAAAAAAAACwgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJACAAAAAAAAkAIAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAALCAAAewogICJuYW1lIjogIlN0dWNrV2FuWWFoIiwKICAidmVyc2lvbiI6ICIxLjAuMCIsCiAgImRlc2NyaXB0aW9uIjogIk15IHJldmFtcCB2ZXJzaW9uIG9mIEZhY2VtYXNoLCB3ZWJzaXRlIGNyZWF0ZWQgYnkgTWFyayBadWNrZXJiZXJnIGZvciByYXRpbmcgcGVvcGxlIGJhc2VkIG9uIHRoZWlyIGxvb2tzIiwKICAicHJpdmF0ZSI6IHRydWUsCiAgIm1haW4iOiAic2VydmVyLmpzIiwKICAiZW5naW5lcyI6IHsKICAgICJub2RlIjogInYxMi54IiwKICAgICJucG0iOiAiNy54IgogIH0sCiAgInNjcmlwdHMiOiB7CiAgICAic3RhcnQiOiAibm9kZW1vbiBzZXJ2ZXIuanMiLAogICAgInRlc3QiOiAiaHR0cC1zZXJ2ZXIgLS1zc2wgLWMtMSAtcCA1MDAwIC1hIDEyNy4wLjAuMSIKICB9LAogICJyZXBvc2l0b3J5IjogImdpdCtodHRwczovL2dpdGh1Yi5jb20vY2hyaXNhdWd1L3N0dWNrd2FueWFoLmdpdCIsCiAgImtleXdvcmRzIjogWwogICAgInN0dWNrIHdhbiIsCiAgICAic3R1Y2sgd2FuIHlhaCIsCiAgICAicmF0aW5nIHBpY3R1cmVzIiwKICAgICJob3QgYm95cyIsCiAgICAiaG90IGdpcmxzIiwKICAgICJkYXQgd2FuIGhvdyIsCiAgICAidm90ZSBmb3Igd2hvJ3MgaG90dGVyIiwKICAgICJmYWNlbWFzaCIsCiAgICAicmF0aW5nIHBlb3BsZSdzIHBpY3R1cmVzIiwKICAgICJub2RlIiwKICAgICJleHByZXNzIgogIF0sCiAgImhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9jaHJpc2F1Z3Uvc3R1Y2t3YW55YWgiLAogICJhdXRob3IiOiAiQ2hyaXN0aWFuIEF1Z3VzdHluIDxjaHJpc2F1Z3U2MUBnbWFpbC5jb20+IiwKICAibGljZW5zZSI6ICJNSVQiLAogICJidWdzIjogewogICAgInVybCI6ICJodHRwczovL2dpdGh1Yi5jb20vY2hyaXNhdWd1L3N0dWNrd2FueWFoL2lzc3VlcyIKICB9LAogICJkZXBlbmRlbmNpZXMiOiB7CiAgICAiYXJwYWQiOiAiXjEuMC4yIiwKICAgICJhcnJheS11bmlxdWUiOiAiKiIsCiAgICAiYXN5bmMiOiAiXjEuNC4wIiwKICAgICJib2R5LXBhcnNlciI6ICJ+MS4xOC4yIiwKICAgICJjb2xvcnMiOiAiKiIsCiAgICAiY29ubmVjdC1yZWRpcyI6ICJeNC4wLjQiLAogICAgImNvb2tpZS1wYXJzZXIiOiAifjEuMy4zIiwKICAgICJjb29raWUtc2Vzc2lvbiI6ICJeMi4wLjAtYmV0YS4zIiwKICAgICJjb3JzIjogIl4yLjguMyIsCiAgICAiY3J5cHRvLWpzIjogIl4zLjEuOS0xIiwKICAgICJkb3RlbnYiOiAiXjUuMC4xIiwKICAgICJlanMiOiAifj4gMi41LjUiLAogICAgImV4cHJlc3MiOiAiNC4xNi4yIiwKICAgICJleHByZXNzLWp3dCI6ICIqIiwKICAgICJleHByZXNzLXNlc3Npb24iOiAiKiIsCiAgICAiZXhwcmVzcy11c2VyYWdlbnQiOiAiXjEuMC4xNSIsCiAgICAiZmF2aWNvbiI6ICIqIiwKICAgICJmcyI6ICIqIiwKICAgICJodHRwIjogIioiLAogICAgImh0dHAtc2VydmVyIjogIl4wLjEyLjEiLAogICAgImp3dC1zaW1wbGUiOiAiKiIsCiAgICAibG9kYXNoLm1lcmdlIjogIl40LjYuMiIsCiAgICAibG9nLXN5bWJvbHMiOiAiKiIsCiAgICAibWVyZ2UiOiAiXjEuMi4xIiwKICAgICJtZXRob2Qtb3ZlcnJpZGUiOiAiPj0yLjMuMTAiLAogICAgIm1vbWVudCI6ICJeMi4yOS4xIiwKICAgICJtb25nb29zZSI6ICJeNS45LjE0IiwKICAgICJtb25nb29zZS1yYW5kb20iOiAiXjAuMS4xIiwKICAgICJtb25nb29zZS1zaW1wbGUtcmFuZG9tIjogIioiLAogICAgIm5vZGUtcmVzdGZ1bCI6ICIqIiwKICAgICJub2RlbW9uIjogIioiLAogICAgIm9wZW4iOiAiPj02LjAuMCIsCiAgICAicGFyc2V1cmwiOiAiKiIsCiAgICAicGFzc3BvcnQiOiAiKiIsCiAgICAicGFzc3BvcnQtZmFjZWJvb2siOiAiXjIuMS4xIiwKICAgICJwYXNzcG9ydC1mYWNlYm9vay10b2tlbiI6ICJeMy4zLjAiLAogICAgInBhdGgiOiAiKiIsCiAgICAicHJvbWlzZSI6ICIqIiwKICAgICJyZWRpcyI6ICJeMy4wLjIiLAogICAgInJlcXVlc3QiOiAiXjIuODMuMCIsCiAgICAicmVxdWVzdC1wcm9taXNlIjogIl40LjIuMiIsCiAgICAic2VydmUtZmF2aWNvbiI6ICIqIiwKICAgICJ1bmRlcnNjb3JlIjogIl4xLjEzLjEiCiAgfQp9CgAAAAAAAAAAUwgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJACAAAAAAAAkAIAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABTCAAAewogICJuYW1lIjogIlN0dWNrV2FuWWFoIiwKICAidmVyc2lvbiI6ICIxLjAuMCIsCiAgImRlc2NyaXB0aW9uIjogIk15IHJldmFtcCB2ZXJzaW9uIG9mIEZhY2VtYXNoLCB3ZWJzaXRlIGNyZWF0ZWQgYnkgTWFyayBadWNrZXJiZXJnIGZvciByYXRpbmcgcGVvcGxlIGJhc2VkIG9uIHRoZWlyIGxvb2tzIiwKICAicHJpdmF0ZSI6IHRydWUsCiAgIm1haW4iOiAic2VydmVyLmpzIiwKICAic2NyaXB0cyI6IHsKICAgICJzdGFydCI6ICJub2RlIHNlcnZlci5qcyIsCiAgICAiZGV2IjogIm5vZGVtb24gc2VydmVyLmpzIiwKICAgICJ0ZXN0IjogImh0dHAtc2VydmVyIC0tc3NsIC1jLTEgLXAgNTAwMCAtYSAxMjcuMC4wLjEiCiAgfSwKICAicmVwb3NpdG9yeSI6ICJnaXQraHR0cHM6Ly9naXRodWIuY29tL2NocmlzYXVndS9zdHVja3dhbnlhaC5naXQiLAogICJrZXl3b3JkcyI6IFsKICAgICJzdHVjayB3YW4iLAogICAgInN0dWNrIHdhbiB5YWgiLAogICAgInJhdGluZyBwaWN0dXJlcyIsCiAgICAiaG90IGJveXMiLAogICAgImhvdCBnaXJscyIsCiAgICAiZGF0IHdhbiBob3ciLAogICAgInZvdGUgZm9yIHdobydzIGhvdHRlciIsCiAgICAiZmFjZW1hc2giLAogICAgInJhdGluZyBwZW9wbGUncyBwaWN0dXJlcyIsCiAgICAibm9kZSIsCiAgICAiZXhwcmVzcyIKICBdLAogICJob21lcGFnZSI6ICJodHRwczovL2dpdGh1Yi5jb20vY2hyaXNhdWd1L3N0dWNrd2FueWFoIiwKICAiYXV0aG9yIjogIkNocmlzdGlhbiBBdWd1c3R5biA8Y2hyaXNhdWd1NjFAZ21haWwuY29tPiIsCiAgImxpY2Vuc2UiOiAiTUlUIiwKICAiYnVncyI6IHsKICAgICJ1cmwiOiAiaHR0cHM6Ly9naXRodWIuY29tL2NocmlzYXVndS9zdHVja3dhbnlhaC9pc3N1ZXMiCiAgfSwKICAiZGVwZW5kZW5jaWVzIjogewogICAgImFycGFkIjogIl4xLjAuMiIsCiAgICAiYXJyYXktdW5pcXVlIjogIioiLAogICAgImFzeW5jIjogIl4xLjUuMiIsCiAgICAiYm9keS1wYXJzZXIiOiAifjEuMTguMiIsCiAgICAiY29sb3JzIjogIl4xLjQuMCIsCiAgICAiY29ubmVjdC1yZWRpcyI6ICJeNC4wLjQiLAogICAgImNvb2tpZS1wYXJzZXIiOiAifjEuMy4zIiwKICAgICJjb29raWUtc2Vzc2lvbiI6ICJeMi4wLjAtYmV0YS4zIiwKICAgICJjb3JzIjogIl4yLjguNSIsCiAgICAiY3J5cHRvLWpzIjogIl4zLjEuOS0xIiwKICAgICJlanMiOiAifj4gMi41LjUiLAogICAgImV4cHJlc3MiOiAiNC4xNi4yIiwKICAgICJleHByZXNzLWp3dCI6ICIqIiwKICAgICJleHByZXNzLXNlc3Npb24iOiAiKiIsCiAgICAiZXhwcmVzcy11c2VyYWdlbnQiOiAiXjEuMC4xNSIsCiAgICAiZmF2aWNvbiI6ICIqIiwKICAgICJmcyI6ICJeMC4wLjEtc2VjdXJpdHkiLAogICAgImh0dHAiOiAiKiIsCiAgICAiaHR0cC1zZXJ2ZXIiOiAiXjAuMTIuMSIsCiAgICAiand0LXNpbXBsZSI6ICIqIiwKICAgICJsb2Rhc2gubWVyZ2UiOiAiXjQuNi4yIiwKICAgICJsb2ctc3ltYm9scyI6ICJeNC4wLjAiLAogICAgIm1lcmdlIjogIl4xLjIuMSIsCiAgICAibWV0aG9kLW92ZXJyaWRlIjogIj49Mi4zLjEwIiwKICAgICJtb21lbnQiOiAiXjIuMjkuMSIsCiAgICAibW9uZ29vc2UiOiAiXjUuOS4xNCIsCiAgICAibW9uZ29vc2UtcmFuZG9tIjogIl4wLjEuMSIsCiAgICAibW9uZ29vc2Utc2ltcGxlLXJhbmRvbSI6ICIqIiwKICAgICJub2RlLXJlc3RmdWwiOiAiKiIsCiAgICAib3BlbiI6ICI+PTYuMC4wIiwKICAgICJwYXJzZXVybCI6ICIqIiwKICAgICJwYXNzcG9ydCI6ICIqIiwKICAgICJwYXNzcG9ydC1mYWNlYm9vayI6ICJeMi4xLjEiLAogICAgInBhc3Nwb3J0LWZhY2Vib29rLXRva2VuIjogIl4zLjMuMCIsCiAgICAicGF0aCI6ICIqIiwKICAgICJwcm9taXNlIjogIioiLAogICAgInJlZGlzIjogIl4zLjAuMiIsCiAgICAicmVxdWVzdCI6ICJeMi44My4wIiwKICAgICJyZXF1ZXN0LXByb21pc2UiOiAiXjQuMi4yIiwKICAgICJzZXJ2ZS1mYXZpY29uIjogIioiLAogICAgInVuZGVyc2NvcmUiOiAiXjEuMTMuMSIsCiAgICAieG1sMmpzIjogIl4wLjQuMjMiCiAgfSwKICAiZGV2RGVwZW5kZW5jaWVzIjogewogICAgImRvdGVudiI6ICJeNS4wLjEiLAogICAgIm1vcmdhbiI6ICJeMS4xMC4wIiwKICAgICJub2RlbW9uIjogIioiCiAgfQp9CgAAAAAAAAAABAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJACAAAAAAAAkAIAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAECAAAewogICJuYW1lIjogInN0dWNrd2FueWFoIiwKICAidmVyc2lvbiI6ICIxLjAuMCIsCiAgImhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9jaHJpc2F1Z3Uvc3R1Y2t3YW55YWgiLAogICJkZXNjcmlwdGlvbiI6ICJNeSByZXZhbXAgdmVyc2lvbiBvZiBGYWNlbWFzaCwgd2Vic2l0ZSBjcmVhdGVkIGJ5IE1hcmsgWnVja2VyYmVyZyBmb3IgcmF0aW5nIHBlb3BsZSBiYXNlZCBvbiB0aGVpciBsb29rcyIsCiAgIm1haW4iOiAic2VydmVyLmpzIiwKICAiZW5naW5lcyI6IHsKICAgICJub2RlIjogIjEyLngiLAogICAgIm5wbSI6ICI2LngiCiAgfSwKICAic2NyaXB0cyI6IHsKICAgICJzdGFydCI6ICJub2RlbW9uIHNlcnZlci5qcyIsCiAgICAidGVzdCI6ICJodHRwLXNlcnZlciAtLXNzbCAtYy0xIC1wIDUwMDAgLWEgMTI3LjAuMC4xIgogIH0sCiAgInJlcG9zaXRvcnkiOiAiZ2l0K2h0dHBzOi8vZ2l0aHViLmNvbS9jaHJpc2F1Z3Uvc3R1Y2t3YW55YWguZ2l0IiwKICAia2V5d29yZHMiOiBbCiAgICAic3R1Y2sgd2FuIiwKICAgICJzdHVjayB3YW4geWFoIiwKICAgICJyYXRpbmcgcGljdHVyZXMiLAogICAgImhvdCBib3lzIiwKICAgICJob3QgZ2lybHMiLAogICAgImRhdCB3YW4gaG93IiwKICAgICJ2b3RlIGZvciB3aG8ncyBob3R0ZXIiLAogICAgImZhY2VtYXNoIiwKICAgICJyYXRpbmcgcGVvcGxlJ3MgcGljdHVyZXMiLAogICAgIm5vZGUiLAogICAgImV4cHJlc3MiCiAgXSwKICAiYXV0aG9yIjogIkNocmlzdGlhbiBBdWd1c3R5biA8Y2hyaXNhdWd1NjFAZ21haWwuY29tPiIsCiAgImxpY2Vuc2UiOiAiTUlUIiwKICAiYnVncyI6IHsKICAgICJ1cmwiOiAiaHR0cHM6Ly9naXRodWIuY29tL2NocmlzYXVndS9zdHVja3dhbnlhaC9pc3N1ZXMiCiAgfSwKICAiZGVwZW5kZW5jaWVzIjogewogICAgImFycGFkIjogIl4xLjAuMiIsCiAgICAiYXJyYXktdW5pcXVlIjogIioiLAogICAgImFzeW5jIjogIl4xLjQuMCIsCiAgICAiYm9keS1wYXJzZXIiOiAifjEuMTguMiIsCiAgICAiY29sb3JzIjogIioiLAogICAgImNvbm5lY3QtcmVkaXMiOiAiXjQuMC40IiwKICAgICJjb29raWUtcGFyc2VyIjogIn4xLjMuMyIsCiAgICAiY29va2llLXNlc3Npb24iOiAiXjIuMC4wLWJldGEuMyIsCiAgICAiY29ycyI6ICJeMi44LjMiLAogICAgImNyeXB0by1qcyI6ICJeMy4xLjktMSIsCiAgICAiZG90ZW52IjogIl41LjAuMSIsCiAgICAiZWpzIjogIn4+IDIuNS41IiwKICAgICJleHByZXNzIjogIjQuMTYuMiIsCiAgICAiZXhwcmVzcy1qd3QiOiAiKiIsCiAgICAiZXhwcmVzcy1zZXNzaW9uIjogIioiLAogICAgImZhdmljb24iOiAiKiIsCiAgICAiZm9yZXZlciI6ICIqIiwKICAgICJmcyI6ICIqIiwKICAgICJodHRwIjogIioiLAogICAgImh0dHAtc2VydmVyIjogIl4wLjEyLjEiLAogICAgImp3dC1zaW1wbGUiOiAiKiIsCiAgICAibG9kYXNoLm1lcmdlIjogIl40LjYuMiIsCiAgICAibG9nLXN5bWJvbHMiOiAiKiIsCiAgICAibWVyZ2UiOiAiXjEuMi4xIiwKICAgICJtZXRob2Qtb3ZlcnJpZGUiOiAiPj0yLjMuMTAiLAogICAgIm1vbWVudCI6ICIqIiwKICAgICJtb25nb29zZSI6ICJeNS45LjE0IiwKICAgICJtb25nb29zZS1yYW5kb20iOiAiXjAuMS4xIiwKICAgICJtb25nb29zZS1zaW1wbGUtcmFuZG9tIjogIioiLAogICAgIm5vZGUtcmVzdGZ1bCI6ICIqIiwKICAgICJub2RlbW9uIjogIioiLAogICAgIm9wZW4iOiAiPj02LjAuMCIsCiAgICAicGFyc2V1cmwiOiAiKiIsCiAgICAicGFzc3BvcnQiOiAiKiIsCiAgICAicGFzc3BvcnQtZmFjZWJvb2siOiAiXjIuMS4xIiwKICAgICJwYXNzcG9ydC1mYWNlYm9vay10b2tlbiI6ICJeMy4zLjAiLAogICAgInBhdGgiOiAiKiIsCiAgICAicHJvbWlzZSI6ICIqIiwKICAgICJyZWRpcyI6ICJeMy4wLjIiLAogICAgInJlcXVlc3QiOiAiXjIuODMuMCIsCiAgICAicmVxdWVzdC1wcm9taXNlIjogIl40LjIuMiIsCiAgICAic2VydmUtZmF2aWNvbiI6ICIqIiwKICAgICJzb2NrZXQuaW8iOiAiKiIsCiAgICAidW5kZXJzY29yZSI6ICIqIiwKICAgICJ4bWwyanMiOiAiKiIKICB9Cn0KAAAAAAAAAABTCAAAAAAAAAAAAAAAAAAAAAAAAFMIAAAAAAAAAAAAAAAAAAAAAAAAUwgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJACAAAAAAAAkAIAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 173,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					12,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPAQAAbm9kZV9tb2R1bGVzCnN0dWNrd2FueWFoZ2FtZQpkYXRhCm1lYW4KdGljLXRhYy10b2UKbmV3Zm9sZGVyCmluc3RhbnRnYW1lCi5pZGVhCi5lbnYKLmJhYmVscmMKKi5zdWJsaW1lLXByb2plY3QKKi5zdWJsaW1lLXdvcmtzcGFjZQpwYWNrYWdlLWxvY2suanNvbgoqLnBlbQoqLy5EU19TdG9yZQoqLkRTX1N0b3JlCm5vZGVfbW9kdWxlcy8KeG5vZGVfbW9kdWxlcy8KYnVpbGQvCmNvbmZpZy5qc29uCmFwcC9pbWFnZXMvY2FyZHMKYXBwL2ltYWdlcy9waG90b3MKYXBwL2phdmFzY3JpcHRzL3BoeXNpY3MKYXBwL2phdmFzY3JpcHRzL2xpYgphcHAvc291bmRzCnZpZXdzL3BoeXNpY3MKKi56aXAAAAAAAAAAAK0AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMAAAAAAAAAwwAAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAK0AAAAAAAAArgAAAAAAAAAAAAAArgAAAAAAAACvAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0AAAAAAAAArQAAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"paste",
					null,
					"AQAAAK8AAAAAAAAA/gEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8AAAAAAAAArwAAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAALwAAAAAAAAAvAAAAAAAAAAQAAAAc3R1Y2t3YW55YWhnYW1lCg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALwAAAAAAAAAzAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAAK8AAAAAAAAArwAAAAAAAAAtAAAAbm9kZV9tb2R1bGVzCmRhdGEKbWVhbgp0aWMtdGFjLXRvZQpuZXdmb2xkZXIK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8AAAAAAAAA3AAAAAAAAAAAAAAAAAAAAA"
				],
				[
					37,
					1,
					"left_delete",
					null,
					"AQAAADIBAAAAAAAAMgEAAAAAAAAPAAAAeG5vZGVfbW9kdWxlcy8K",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIBAAAAAAAAQQEAAAAAAAAAAAAAAAAAAA"
				],
				[
					44,
					3,
					"left_delete",
					null,
					"AwAAAK8AAAAAAAAArwAAAAAAAAADAQAAaW5zdGFudGdhbWUKLmlkZWEKLmVudgouYmFiZWxyYwoqLnN1YmxpbWUtcHJvamVjdAoqLnN1YmxpbWUtd29ya3NwYWNlCnBhY2thZ2UtbG9jay5qc29uCioucGVtCiovLkRTX1N0b3JlCiouRFNfU3RvcmUKbm9kZV9tb2R1bGVzLwpidWlsZC8KY29uZmlnLmpzb24KYXBwL2ltYWdlcy9jYXJkcwphcHAvaW1hZ2VzL3Bob3RvcwphcHAvamF2YXNjcmlwdHMvcGh5c2ljcwphcHAvamF2YXNjcmlwdHMvbGliCmFwcC9zb3VuZHMKdmlld3MvcGh5c2ljcwoqLnppcK4AAAAAAAAArgAAAAAAAAABAAAACq0AAAAAAAAArQAAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8AAAAAAAAAsgEAAAAAAAAAAAAAAAAAAA"
				],
				[
					49,
					2,
					"paste",
					null,
					"AwAAAKEAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAACtAAAAAAAAAAwAAAAKaW5zdGFudGdhbWWtAAAAAAAAALkAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKEAAAAAAAAArQAAAAAAAAAAAAAAAMBdQA"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "/*"
					},
					"AgAAALkAAAAAAAAAugAAAAAAAAAAAAAAugAAAAAAAAC7AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkAAAAAAAAAuQAAAAAAAAAAAAAAAADwvw"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAK4AAAAAAAAArwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4AAAAAAAAArgAAAAAAAAAAAAAAAADwvw"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAKIAAAAAAAAAowAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKIAAAAAAAAAogAAAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC9AAAAIyBmaWxlcwouZW52Ci5iYWJlbHJjCiouc3VibGltZS1wcm9qZWN0Ciouc3VibGltZS13b3Jrc3BhY2UKcGFja2FnZS1sb2NrLmpzb24KKi5wZW0KY29uZmlnLmpzb24KKi56aXAKCiMgZm9sZGVycwouaWRlYQpuZXdmb2xkZXIKbm9kZV9tb2R1bGVzLwojYXBwL2ltYWdlcy9waG90b3MKL2luc3RhbnRnYW1lCi9pbnN0YW50Z2FtZS8qAAAAAAAAAACtAAAAAAAAAAAAAAAAAAAAAAAAAK0AAAAAAAAAAAAAAAAAAAAAAAAArQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0AAAAAAAAAvQAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": ".env",
			"settings":
			{
				"buffer_size": 1613,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					6,
					2,
					"left_delete",
					null,
					"AgAAAIcCAAAAAAAAhwIAAAAAAAASAAAAWU9VUl9QQUdFX0lEX0hFUkU+hgIAAAAAAACGAgAAAAAAAAEAAAA8",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhwIAAAAAAACZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"paste",
					null,
					"AQAAAIYCAAAAAAAAlQIAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhgIAAAAAAACGAgAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"paste",
					null,
					"AgAAAIoAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACbAAAAAAAAAAsAAABNT05HT0RCX1VSTA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAigAAAAAAAACVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"paste",
					null,
					"AgAAALEBAAAAAAAAwAEAAAAAAAAAAAAAwAEAAAAAAADAAQAAAAAAABAAAAAxNzkxMTY1MzU3NTY4ODMx",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwQEAAAAAAACxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAIoAAAAAAAAAiwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoAAAAAAAAAigAAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAFwAAAAAAAAAXQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFwAAAAAAAAAXAAAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANwAAAAAAAAA3QAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwAAAAAAAAA3AAAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					1,
					"paste",
					null,
					"AQAAAN0AAAAAAAAA7gAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0AAAAAAAAA3QAAAAAAAAAAAAAAAADwvw"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO4AAAAAAAAA7gAAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"paste",
					null,
					"AQAAAO8AAAAAAAAAFAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8AAAAAAAAA7wAAAAAAAAAAAAAAAADwvw"
				],
				[
					43,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNBgAAIyBUaGVzZSB2YWx1ZXMgd2lsbCBiZSB1c2VkIGZvciBsb2NhbCB0ZXN0aW5nCgojIENvbm5lY3Rpb24gc3RyaW5nIHRvIHlvdXIgTW9uZ29kYiBkYXRhYmFzZQojREJfVEVTVD1tb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3L3N3ZWV0bGlwc2RiCiNNT05HT0RCX0FERE9OX1VSST1tb25nb2RiOi8vY2hyaXNhdWd1OmNoYXRtM0BkczExNzcxOS5tbGFiLmNvbToxNzcxOS9zd2VldGxpcHNkYgpNT05HT0RCX0FERE9OX1VSST1tb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3L3N3ZWV0bGlwc2RiCgojIE1lbW9yYWJsZSB3b3JkIHRvIHZlcmlmeSB3ZWJob29rcyB3aXRoIE1lc3NlbmdlciBwbGF0Zm9ybQpCT1RfVkVSSUZJQ0FUSU9OX1RPS0VOPXRoaXNfaXNfbXlfdG9rZW4KVkVSSUZJQ0FUSU9OX1RPS0VOPXRoaXNfaXNfbXlfdG9rZW4KClBPUlQ9NTAwMAoKIyBBcHAgU2VjcmV0IGZvciBkZWNvZGluZyBjbGllbnQgc2lnbmVkIG1lc3NhZ2VzCkZBQ0VCT09LX0FQUF9JRD0yMDYyMDA3Mjk5ODMyMDIKRkFDRUJPT0tfQVBQX1NFQ1JFVD1lMjdjYjdhYmRhY2ZmMmY4ZWFjYzFhZjNhZjJjZTViZQpGQUNFQk9PS19BUFBfS0VZPTxZT1VSX0FQUF9LRVlfSEVSRT4KI0ZBQ0VCT09LX0NMSUVOVF9JRD0xNzkxMTY1MzU3NTY4ODMxCiNGQUNFQk9PS19DTElFTlRfU0VDUkVUPWUyN2NiN2FiZGFjZmYyZjhlYWNjMWFmM2FmMmNlNWJlCgpGQUNFQk9PS19QQUdFX0lEPTUwODM4MjU4OTU0NjYwNwoKIyBQYWdlIGFjY2VzcyB0b2tlbiBmb3Igc2VuZGluZyBib3QgbWVzc2FnZXMKUEFHRV9BQ0NFU1NfVE9LRU49RUFBWkFkRGk3Zk16OEJBQjZ2YndjWU9qTHJCb1pBRU5EMkdXREtqQXBDSVpDNHRWdjBJczUxQjQ3Z3hLN2hZVFRTdVFpcmhUZ1dxWkFkbEJ3M0JhV0k5aUI5bkJWWkJocVBTSDY5Q1pCTmpjcWQxVndOcXBUekpUUWlDaUxVYVBlVlhaQU1hVFRzT1pCZjBPbzlvWkFOcUplVGFYcUlyNFd6WkJkWkE2bDFrcHczazZSQjZKTFJRdjVZZ28KVVNFUl9BQ0NFU1NfVE9LRU49RUFBWkFkRGk3Zk16OEJBT1RseE56MFJDOUlER2xIVDNDbEY0SENHVEFINGd5azRNVGwyNWhqcGNVcXBHblpCMkREZUx3bEtRelZoZkpxZWtqQ1A1dTlRNWpPVnNaQjVLYVFQWTV6TjlHc2w1MGEwNjNVTzRsVVZJMGl4SVpCdWo3b0htOU9RUG5yN0RSd2p5dHlPUWR4S1YzNzBaQ2xaQ1pCamlYaWhaQXo1QkZzTXhaQUNFUWdra0sxeWRSc21oQ00xcE1CczJvSVlSU0tJTkdCM1pBWkNtTlI4Y0NwN2xScVNTZjNwOW1vZTlaQk1NNXpaQ0RaQ01nQnpyRHBWCkFQUF9BQ0NFU1NfVE9LRU49MjA2MjAwNzI5OTgzMjAyfG90Z3VCekpISWp3TGlVTkphNUpJVzBPTGowUQoKIyBUb2dnbGUgc2VjdXJlIGNvbW11bmljYXRpb24gb2ZmIGZvciBsb2NhbCB0ZXN0aW5nIHdpdGggTW9jayBTREsKVVNFX1NFQ1VSRV9DT01NVU5JQ0FUSU9OPTAKClVQTE9BRF9BQ0NFU1NfVE9LRU49RUFBWXNmWkF4aUZtTUJBS3NaQkk3RFpCNnh3cHpaQUdrc2dRMHZNcjlDTmFrdG1kR2F6ZWNrSGJaQTFoeXZ3WTlXS0x0aEJmTnV0OVpBNDJqVGJ0Y0RkQ3hNRmhVWkJLbGdFMkU1Z0pVbks5QXdCWkN6bnBBT0VmWkN1cEJpMFl3cGphZmhkRU9kcTN3ZDRqYjRJTVpDZklHcFpCUEhpUm1GTTk3TVF4OFpCQU1UVkgzWkJRWkRaRAoAAAAAAAAAABMGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0AAAAAAAAA7gAAAAAAAAAAAAAAAADwvw"
				],
				[
					44,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAATBgAAIyBUaGVzZSB2YWx1ZXMgd2lsbCBiZSB1c2VkIGZvciBsb2NhbCB0ZXN0aW5nCgojIENvbm5lY3Rpb24gc3RyaW5nIHRvIHlvdXIgTW9uZ29kYiBkYXRhYmFzZQpEQl9URVNUPW1vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcvc3dlZXRsaXBzZGIKTU9OR09EQl9BRERPTl9VUkk9bW9uZ29kYjovL2NocmlzYXVndTpjaGF0bTNAZHMxMTc3MTkubWxhYi5jb206MTc3MTkvc3dlZXRsaXBzZGIKCiMgTWVtb3JhYmxlIHdvcmQgdG8gdmVyaWZ5IHdlYmhvb2tzIHdpdGggTWVzc2VuZ2VyIHBsYXRmb3JtCkJPVF9WRVJJRklDQVRJT05fVE9LRU49dGhpc19pc19teV90b2tlbgpWRVJJRklDQVRJT05fVE9LRU49dGhpc19pc19teV90b2tlbgoKUE9SVD01MDAwCgojIEFwcCBTZWNyZXQgZm9yIGRlY29kaW5nIGNsaWVudCBzaWduZWQgbWVzc2FnZXMKRkFDRUJPT0tfQVBQX0lEPTIwNjIwMDcyOTk4MzIwMgpGQUNFQk9PS19BUFBfU0VDUkVUPWUyN2NiN2FiZGFjZmYyZjhlYWNjMWFmM2FmMmNlNWJlCkZBQ0VCT09LX0FQUF9LRVk9PFlPVVJfQVBQX0tFWV9IRVJFPgojRkFDRUJPT0tfQ0xJRU5UX0lEPTE3OTExNjUzNTc1Njg4MzEKI0ZBQ0VCT09LX0NMSUVOVF9TRUNSRVQ9ZTI3Y2I3YWJkYWNmZjJmOGVhY2MxYWYzYWYyY2U1YmUKCkZBQ0VCT09LX1BBR0VfSUQ9NTA4MzgyNTg5NTQ2NjA3CgojIFBhZ2UgYWNjZXNzIHRva2VuIGZvciBzZW5kaW5nIGJvdCBtZXNzYWdlcwpQQUdFX0FDQ0VTU19UT0tFTj1FQUFaQWREaTdmTXo4QkFCNnZid2NZT2pMckJvWkFFTkQyR1dES2pBcENJWkM0dFZ2MElzNTFCNDdneEs3aFlUVFN1UWlyaFRnV3FaQWRsQnczQmFXSTlpQjluQlZaQmhxUFNINjlDWkJOamNxZDFWd05xcFR6SlRRaUNpTFVhUGVWWFpBTWFUVHNPWkJmME9vOW9aQU5xSmVUYVhxSXI0V3paQmRaQTZsMWtwdzNrNlJCNkpMUlF2NVlnbwpVU0VSX0FDQ0VTU19UT0tFTj1FQUFaQWREaTdmTXo4QkFPVGx4TnowUkM5SURHbEhUM0NsRjRIQ0dUQUg0Z3lrNE1UbDI1aGpwY1VxcEduWkIyRERlTHdsS1F6VmhmSnFla2pDUDV1OVE1ak9Wc1pCNUthUVBZNXpOOUdzbDUwYTA2M1VPNGxVVkkwaXhJWkJ1ajdvSG05T1FQbnI3RFJ3anl0eU9RZHhLVjM3MFpDbFpDWkJqaVhpaFpBejVCRnNNeFpBQ0VRZ2trSzF5ZFJzbWhDTTFwTUJzMm9JWVJTS0lOR0IzWkFaQ21OUjhjQ3A3bFJxU1NmM3A5bW9lOVpCTU01elpDRFpDTWdCenJEcFYKQVBQX0FDQ0VTU19UT0tFTj0yMDYyMDA3Mjk5ODMyMDJ8b3RndUJ6SkhJandMaVVOSmE1SklXME9MajBRCgojIFRvZ2dsZSBzZWN1cmUgY29tbXVuaWNhdGlvbiBvZmYgZm9yIGxvY2FsIHRlc3Rpbmcgd2l0aCBNb2NrIFNESwpVU0VfU0VDVVJFX0NPTU1VTklDQVRJT049MAoKVVBMT0FEX0FDQ0VTU19UT0tFTj1FQUFZc2ZaQXhpRm1NQkFLc1pCSTdEWkI2eHdwelpBR2tzZ1Ewdk1yOUNOYWt0bWRHYXplY2tIYlpBMWh5dndZOVdLTHRoQmZOdXQ5WkE0MmpUYnRjRGRDeE1GaFVaQktsZ0UyRTVnSlVuSzlBd0JaQ3pucEFPRWZaQ3VwQmkwWXdwamFmaGRFT2RxM3dkNGpiNElNWkNmSUdwWkJQSGlSbUZNOTdNUXg4WkJBTVRWSDNaQlFaRFpECgAAAAAAAAAAEgYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0AAAAAAAAA7gAAAAAAAAAAAAAAAADwvw"
				],
				[
					45,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASBgAAIyBUaGVzZSB2YWx1ZXMgd2lsbCBiZSB1c2VkIGZvciBsb2NhbCB0ZXN0aW5nCgojIENvbm5lY3Rpb24gc3RyaW5nIHRvIHlvdXIgTW9uZ29kYiBkYXRhYmFzZQpEQl9URVNUPW1vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcvc3dlZXRsaXBzZGIKTU9OR09EQl9VUkw9bW9uZ29kYjovL2NocmlzYXVndTpjaGF0bTNAZHMxMTc3MTkubWxhYi5jb206MTc3MTkvc3dlZXRsaXBzZGIKCiMgTWVtb3JhYmxlIHdvcmQgdG8gdmVyaWZ5IHdlYmhvb2tzIHdpdGggTWVzc2VuZ2VyIHBsYXRmb3JtCkJPVF9WRVJJRklDQVRJT05fVE9LRU49dGhpc19pc19teV90b2tlbgpWRVJJRklDQVRJT05fVE9LRU49dGhpc19pc19teV90b2tlbgoKUE9SVD01MDAwCgojIEFwcCBTZWNyZXQgZm9yIGRlY29kaW5nIGNsaWVudCBzaWduZWQgbWVzc2FnZXMKRkFDRUJPT0tfQVBQX0lEPTE3OTExNjUzNTc1Njg4MzEKRkFDRUJPT0tfQVBQX1NFQ1JFVD1lMjdjYjdhYmRhY2ZmMmY4ZWFjYzFhZjNhZjJjZTViZQpGQUNFQk9PS19BUFBfS0VZPTxZT1VSX0FQUF9LRVlfSEVSRT4KI0ZBQ0VCT09LX0NMSUVOVF9JRD0xNzkxMTY1MzU3NTY4ODMxCiNGQUNFQk9PS19DTElFTlRfU0VDUkVUPWUyN2NiN2FiZGFjZmYyZjhlYWNjMWFmM2FmMmNlNWJlCgpGQUNFQk9PS19QQUdFX0lEPTxZT1VSX1BBR0VfSURfSEVSRT4KCiMgUGFnZSBhY2Nlc3MgdG9rZW4gZm9yIHNlbmRpbmcgYm90IG1lc3NhZ2VzClBBR0VfQUNDRVNTX1RPS0VOPUVBQVpBZERpN2ZNejhCQUI2dmJ3Y1lPakxyQm9aQUVORDJHV0RLakFwQ0laQzR0VnYwSXM1MUI0N2d4SzdoWVRUU3VRaXJoVGdXcVpBZGxCdzNCYVdJOWlCOW5CVlpCaHFQU0g2OUNaQk5qY3FkMVZ3TnFwVHpKVFFpQ2lMVWFQZVZYWkFNYVRUc09aQmYwT285b1pBTnFKZVRhWHFJcjRXelpCZFpBNmwxa3B3M2s2UkI2SkxSUXY1WWdvClVTRVJfQUNDRVNTX1RPS0VOPUVBQVpBZERpN2ZNejhCQU9UbHhOejBSQzlJREdsSFQzQ2xGNEhDR1RBSDRneWs0TVRsMjVoanBjVXFwR25aQjJERGVMd2xLUXpWaGZKcWVrakNQNXU5UTVqT1ZzWkI1S2FRUFk1ek45R3NsNTBhMDYzVU80bFVWSTBpeElaQnVqN29IbTlPUVBucjdEUndqeXR5T1FkeEtWMzcwWkNsWkNaQmppWGloWkF6NUJGc014WkFDRVFna2tLMXlkUnNtaENNMXBNQnMyb0lZUlNLSU5HQjNaQVpDbU5SOGNDcDdsUnFTU2YzcDltb2U5WkJNTTV6WkNEWkNNZ0J6ckRwVgpBUFBfQUNDRVNTX1RPS0VOPTIwNjIwMDcyOTk4MzIwMnxvdGd1QnpKSElqd0xpVU5KYTVKSVcwT0xqMFEKCiMgVG9nZ2xlIHNlY3VyZSBjb21tdW5pY2F0aW9uIG9mZiBmb3IgbG9jYWwgdGVzdGluZyB3aXRoIE1vY2sgU0RLClVTRV9TRUNVUkVfQ09NTVVOSUNBVElPTj0wCgpVUExPQURfQUNDRVNTX1RPS0VOPUVBQVlzZlpBeGlGbU1CQUtzWkJJN0RaQjZ4d3B6WkFHa3NnUTB2TXI5Q05ha3RtZEdhemVja0hiWkExaHl2d1k5V0tMdGhCZk51dDlaQTQyalRidGNEZEN4TUZoVVpCS2xnRTJFNWdKVW5LOUF3QlpDem5wQU9FZlpDdXBCaTBZd3BqYWZoZEVPZHEzd2Q0amI0SU1aQ2ZJR3BaQlBIaVJtRk05N01ReDhaQkFNVFZIM1pCUVpEWkQKAAAAAAAAAABNBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0AAAAAAAAA7gAAAAAAAAAAAAAAAADwvw"
				],
				[
					46,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNBgAAIyBUaGVzZSB2YWx1ZXMgd2lsbCBiZSB1c2VkIGZvciBsb2NhbCB0ZXN0aW5nCgojIENvbm5lY3Rpb24gc3RyaW5nIHRvIHlvdXIgTW9uZ29kYiBkYXRhYmFzZQojREJfVEVTVD1tb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3L3N3ZWV0bGlwc2RiCiNNT05HT0RCX0FERE9OX1VSST1tb25nb2RiOi8vY2hyaXNhdWd1OmNoYXRtM0BkczExNzcxOS5tbGFiLmNvbToxNzcxOS9zd2VldGxpcHNkYgpNT05HT0RCX0FERE9OX1VSST1tb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3L3N3ZWV0bGlwc2RiCgojIE1lbW9yYWJsZSB3b3JkIHRvIHZlcmlmeSB3ZWJob29rcyB3aXRoIE1lc3NlbmdlciBwbGF0Zm9ybQpCT1RfVkVSSUZJQ0FUSU9OX1RPS0VOPXRoaXNfaXNfbXlfdG9rZW4KVkVSSUZJQ0FUSU9OX1RPS0VOPXRoaXNfaXNfbXlfdG9rZW4KClBPUlQ9NTAwMAoKIyBBcHAgU2VjcmV0IGZvciBkZWNvZGluZyBjbGllbnQgc2lnbmVkIG1lc3NhZ2VzCkZBQ0VCT09LX0FQUF9JRD0yMDYyMDA3Mjk5ODMyMDIKRkFDRUJPT0tfQVBQX1NFQ1JFVD1lMjdjYjdhYmRhY2ZmMmY4ZWFjYzFhZjNhZjJjZTViZQpGQUNFQk9PS19BUFBfS0VZPTxZT1VSX0FQUF9LRVlfSEVSRT4KI0ZBQ0VCT09LX0NMSUVOVF9JRD0xNzkxMTY1MzU3NTY4ODMxCiNGQUNFQk9PS19DTElFTlRfU0VDUkVUPWUyN2NiN2FiZGFjZmYyZjhlYWNjMWFmM2FmMmNlNWJlCgpGQUNFQk9PS19QQUdFX0lEPTUwODM4MjU4OTU0NjYwNwoKIyBQYWdlIGFjY2VzcyB0b2tlbiBmb3Igc2VuZGluZyBib3QgbWVzc2FnZXMKUEFHRV9BQ0NFU1NfVE9LRU49RUFBWkFkRGk3Zk16OEJBQjZ2YndjWU9qTHJCb1pBRU5EMkdXREtqQXBDSVpDNHRWdjBJczUxQjQ3Z3hLN2hZVFRTdVFpcmhUZ1dxWkFkbEJ3M0JhV0k5aUI5bkJWWkJocVBTSDY5Q1pCTmpjcWQxVndOcXBUekpUUWlDaUxVYVBlVlhaQU1hVFRzT1pCZjBPbzlvWkFOcUplVGFYcUlyNFd6WkJkWkE2bDFrcHczazZSQjZKTFJRdjVZZ28KVVNFUl9BQ0NFU1NfVE9LRU49RUFBWkFkRGk3Zk16OEJBT1RseE56MFJDOUlER2xIVDNDbEY0SENHVEFINGd5azRNVGwyNWhqcGNVcXBHblpCMkREZUx3bEtRelZoZkpxZWtqQ1A1dTlRNWpPVnNaQjVLYVFQWTV6TjlHc2w1MGEwNjNVTzRsVVZJMGl4SVpCdWo3b0htOU9RUG5yN0RSd2p5dHlPUWR4S1YzNzBaQ2xaQ1pCamlYaWhaQXo1QkZzTXhaQUNFUWdra0sxeWRSc21oQ00xcE1CczJvSVlSU0tJTkdCM1pBWkNtTlI4Y0NwN2xScVNTZjNwOW1vZTlaQk1NNXpaQ0RaQ01nQnpyRHBWCkFQUF9BQ0NFU1NfVE9LRU49MjA2MjAwNzI5OTgzMjAyfG90Z3VCekpISWp3TGlVTkphNUpJVzBPTGowUQoKIyBUb2dnbGUgc2VjdXJlIGNvbW11bmljYXRpb24gb2ZmIGZvciBsb2NhbCB0ZXN0aW5nIHdpdGggTW9jayBTREsKVVNFX1NFQ1VSRV9DT01NVU5JQ0FUSU9OPTAKClVQTE9BRF9BQ0NFU1NfVE9LRU49RUFBWXNmWkF4aUZtTUJBS3NaQkk3RFpCNnh3cHpaQUdrc2dRMHZNcjlDTmFrdG1kR2F6ZWNrSGJaQTFoeXZ3WTlXS0x0aEJmTnV0OVpBNDJqVGJ0Y0RkQ3hNRmhVWkJLbGdFMkU1Z0pVbks5QXdCWkN6bnBBT0VmWkN1cEJpMFl3cGphZmhkRU9kcTN3ZDRqYjRJTVpDZklHcFpCUEhpUm1GTTk3TVF4OFpCQU1UVkgzWkJRWkRaRAoAAAAAAAAAABIGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0AAAAAAAAA7gAAAAAAAAAAAAAAAADwvw"
				],
				[
					47,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASBgAAIyBUaGVzZSB2YWx1ZXMgd2lsbCBiZSB1c2VkIGZvciBsb2NhbCB0ZXN0aW5nCgojIENvbm5lY3Rpb24gc3RyaW5nIHRvIHlvdXIgTW9uZ29kYiBkYXRhYmFzZQpEQl9URVNUPW1vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcvc3dlZXRsaXBzZGIKTU9OR09EQl9VUkw9bW9uZ29kYjovL2NocmlzYXVndTpjaGF0bTNAZHMxMTc3MTkubWxhYi5jb206MTc3MTkvc3dlZXRsaXBzZGIKCiMgTWVtb3JhYmxlIHdvcmQgdG8gdmVyaWZ5IHdlYmhvb2tzIHdpdGggTWVzc2VuZ2VyIHBsYXRmb3JtCkJPVF9WRVJJRklDQVRJT05fVE9LRU49dGhpc19pc19teV90b2tlbgpWRVJJRklDQVRJT05fVE9LRU49dGhpc19pc19teV90b2tlbgoKUE9SVD01MDAwCgojIEFwcCBTZWNyZXQgZm9yIGRlY29kaW5nIGNsaWVudCBzaWduZWQgbWVzc2FnZXMKRkFDRUJPT0tfQVBQX0lEPTE3OTExNjUzNTc1Njg4MzEKRkFDRUJPT0tfQVBQX1NFQ1JFVD1lMjdjYjdhYmRhY2ZmMmY4ZWFjYzFhZjNhZjJjZTViZQpGQUNFQk9PS19BUFBfS0VZPTxZT1VSX0FQUF9LRVlfSEVSRT4KI0ZBQ0VCT09LX0NMSUVOVF9JRD0xNzkxMTY1MzU3NTY4ODMxCiNGQUNFQk9PS19DTElFTlRfU0VDUkVUPWUyN2NiN2FiZGFjZmYyZjhlYWNjMWFmM2FmMmNlNWJlCgpGQUNFQk9PS19QQUdFX0lEPTxZT1VSX1BBR0VfSURfSEVSRT4KCiMgUGFnZSBhY2Nlc3MgdG9rZW4gZm9yIHNlbmRpbmcgYm90IG1lc3NhZ2VzClBBR0VfQUNDRVNTX1RPS0VOPUVBQVpBZERpN2ZNejhCQUI2dmJ3Y1lPakxyQm9aQUVORDJHV0RLakFwQ0laQzR0VnYwSXM1MUI0N2d4SzdoWVRUU3VRaXJoVGdXcVpBZGxCdzNCYVdJOWlCOW5CVlpCaHFQU0g2OUNaQk5qY3FkMVZ3TnFwVHpKVFFpQ2lMVWFQZVZYWkFNYVRUc09aQmYwT285b1pBTnFKZVRhWHFJcjRXelpCZFpBNmwxa3B3M2s2UkI2SkxSUXY1WWdvClVTRVJfQUNDRVNTX1RPS0VOPUVBQVpBZERpN2ZNejhCQU9UbHhOejBSQzlJREdsSFQzQ2xGNEhDR1RBSDRneWs0TVRsMjVoanBjVXFwR25aQjJERGVMd2xLUXpWaGZKcWVrakNQNXU5UTVqT1ZzWkI1S2FRUFk1ek45R3NsNTBhMDYzVU80bFVWSTBpeElaQnVqN29IbTlPUVBucjdEUndqeXR5T1FkeEtWMzcwWkNsWkNaQmppWGloWkF6NUJGc014WkFDRVFna2tLMXlkUnNtaENNMXBNQnMyb0lZUlNLSU5HQjNaQVpDbU5SOGNDcDdsUnFTU2YzcDltb2U5WkJNTTV6WkNEWkNNZ0J6ckRwVgpBUFBfQUNDRVNTX1RPS0VOPTIwNjIwMDcyOTk4MzIwMnxvdGd1QnpKSElqd0xpVU5KYTVKSVcwT0xqMFEKCiMgVG9nZ2xlIHNlY3VyZSBjb21tdW5pY2F0aW9uIG9mZiBmb3IgbG9jYWwgdGVzdGluZyB3aXRoIE1vY2sgU0RLClVTRV9TRUNVUkVfQ09NTVVOSUNBVElPTj0wCgpVUExPQURfQUNDRVNTX1RPS0VOPUVBQVlzZlpBeGlGbU1CQUtzWkJJN0RaQjZ4d3B6WkFHa3NnUTB2TXI5Q05ha3RtZEdhemVja0hiWkExaHl2d1k5V0tMdGhCZk51dDlaQTQyalRidGNEZEN4TUZoVVpCS2xnRTJFNWdKVW5LOUF3QlpDem5wQU9FZlpDdXBCaTBZd3BqYWZoZEVPZHEzd2Q0amI0SU1aQ2ZJR3BaQlBIaVJtRk05N01ReDhaQkFNVFZIM1pCUVpEWkQKAAAAAAAAAABNBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0AAAAAAAAA7gAAAAAAAAAAAAAAAADwvw"
				],
				[
					48,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNBgAAIyBUaGVzZSB2YWx1ZXMgd2lsbCBiZSB1c2VkIGZvciBsb2NhbCB0ZXN0aW5nCgojIENvbm5lY3Rpb24gc3RyaW5nIHRvIHlvdXIgTW9uZ29kYiBkYXRhYmFzZQojREJfVEVTVD1tb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3L3N3ZWV0bGlwc2RiCiNNT05HT0RCX0FERE9OX1VSST1tb25nb2RiOi8vY2hyaXNhdWd1OmNoYXRtM0BkczExNzcxOS5tbGFiLmNvbToxNzcxOS9zd2VldGxpcHNkYgpNT05HT0RCX0FERE9OX1VSST1tb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3L3N3ZWV0bGlwc2RiCgojIE1lbW9yYWJsZSB3b3JkIHRvIHZlcmlmeSB3ZWJob29rcyB3aXRoIE1lc3NlbmdlciBwbGF0Zm9ybQpCT1RfVkVSSUZJQ0FUSU9OX1RPS0VOPXRoaXNfaXNfbXlfdG9rZW4KVkVSSUZJQ0FUSU9OX1RPS0VOPXRoaXNfaXNfbXlfdG9rZW4KClBPUlQ9NTAwMAoKIyBBcHAgU2VjcmV0IGZvciBkZWNvZGluZyBjbGllbnQgc2lnbmVkIG1lc3NhZ2VzCkZBQ0VCT09LX0FQUF9JRD0yMDYyMDA3Mjk5ODMyMDIKRkFDRUJPT0tfQVBQX1NFQ1JFVD1lMjdjYjdhYmRhY2ZmMmY4ZWFjYzFhZjNhZjJjZTViZQpGQUNFQk9PS19BUFBfS0VZPTxZT1VSX0FQUF9LRVlfSEVSRT4KI0ZBQ0VCT09LX0NMSUVOVF9JRD0xNzkxMTY1MzU3NTY4ODMxCiNGQUNFQk9PS19DTElFTlRfU0VDUkVUPWUyN2NiN2FiZGFjZmYyZjhlYWNjMWFmM2FmMmNlNWJlCgpGQUNFQk9PS19QQUdFX0lEPTUwODM4MjU4OTU0NjYwNwoKIyBQYWdlIGFjY2VzcyB0b2tlbiBmb3Igc2VuZGluZyBib3QgbWVzc2FnZXMKUEFHRV9BQ0NFU1NfVE9LRU49RUFBWkFkRGk3Zk16OEJBQjZ2YndjWU9qTHJCb1pBRU5EMkdXREtqQXBDSVpDNHRWdjBJczUxQjQ3Z3hLN2hZVFRTdVFpcmhUZ1dxWkFkbEJ3M0JhV0k5aUI5bkJWWkJocVBTSDY5Q1pCTmpjcWQxVndOcXBUekpUUWlDaUxVYVBlVlhaQU1hVFRzT1pCZjBPbzlvWkFOcUplVGFYcUlyNFd6WkJkWkE2bDFrcHczazZSQjZKTFJRdjVZZ28KVVNFUl9BQ0NFU1NfVE9LRU49RUFBWkFkRGk3Zk16OEJBT1RseE56MFJDOUlER2xIVDNDbEY0SENHVEFINGd5azRNVGwyNWhqcGNVcXBHblpCMkREZUx3bEtRelZoZkpxZWtqQ1A1dTlRNWpPVnNaQjVLYVFQWTV6TjlHc2w1MGEwNjNVTzRsVVZJMGl4SVpCdWo3b0htOU9RUG5yN0RSd2p5dHlPUWR4S1YzNzBaQ2xaQ1pCamlYaWhaQXo1QkZzTXhaQUNFUWdra0sxeWRSc21oQ00xcE1CczJvSVlSU0tJTkdCM1pBWkNtTlI4Y0NwN2xScVNTZjNwOW1vZTlaQk1NNXpaQ0RaQ01nQnpyRHBWCkFQUF9BQ0NFU1NfVE9LRU49MjA2MjAwNzI5OTgzMjAyfG90Z3VCekpISWp3TGlVTkphNUpJVzBPTGowUQoKIyBUb2dnbGUgc2VjdXJlIGNvbW11bmljYXRpb24gb2ZmIGZvciBsb2NhbCB0ZXN0aW5nIHdpdGggTW9jayBTREsKVVNFX1NFQ1VSRV9DT01NVU5JQ0FUSU9OPTAKClVQTE9BRF9BQ0NFU1NfVE9LRU49RUFBWXNmWkF4aUZtTUJBS3NaQkk3RFpCNnh3cHpaQUdrc2dRMHZNcjlDTmFrdG1kR2F6ZWNrSGJaQTFoeXZ3WTlXS0x0aEJmTnV0OVpBNDJqVGJ0Y0RkQ3hNRmhVWkJLbGdFMkU1Z0pVbks5QXdCWkN6bnBBT0VmWkN1cEJpMFl3cGphZmhkRU9kcTN3ZDRqYjRJTVpDZklHcFpCUEhpUm1GTTk3TVF4OFpCQU1UVkgzWkJRWkRaRAoAAAAAAAAAAAAGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0AAAAAAAAA7gAAAAAAAAAAAAAAAADwvw"
				],
				[
					51,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAIyBUaGVzZSB2YWx1ZXMgd2lsbCBiZSB1c2VkIGZvciBsb2NhbCB0ZXN0aW5nCgojIENvbm5lY3Rpb24gc3RyaW5nIHRvIHlvdXIgTW9uZ29kYiBkYXRhYmFzZQpEQl9URVNUPW1vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcvc3dlZXRsaXBzZGIKTU9OR09EQl9VUkw9bW9uZ29kYjovL2NocmlzYXVndTpjaGF0bTNAZHMxMTc3MTkubWxhYi5jb206MTc3MTkvc3dlZXRsaXBzZGIKCiMgTWVtb3JhYmxlIHdvcmQgdG8gdmVyaWZ5IHdlYmhvb2tzIHdpdGggTWVzc2VuZ2VyIHBsYXRmb3JtCkJPVF9WRVJJRklDQVRJT05fVE9LRU49dGhpc19pc19teV90b2tlbgpWRVJJRklDQVRJT05fVE9LRU49dGhpc19pc19teV90b2tlbgoKUE9SVD01MDAwCgojIEFwcCBTZWNyZXQgZm9yIGRlY29kaW5nIGNsaWVudCBzaWduZWQgbWVzc2FnZXMKRkFDRUJPT0tfQVBQX0lEPTE3OTExNjUzNTc1Njg4MzEKRkFDRUJPT0tfQVBQX1NFQ1JFVD1lMjdjYjdhYmRhY2ZmMmY4ZWFjYzFhZjNhZjJjZTViZQpGQUNFQk9PS19BUFBfS0VZPTxZT1VSX0FQUF9LRVlfSEVSRT4KI0ZBQ0VCT09LX0NMSUVOVF9JRD0xNzkxMTY1MzU3NTY4ODMxCiNGQUNFQk9PS19DTElFTlRfU0VDUkVUPWUyN2NiN2FiZGFjZmYyZjhlYWNjMWFmM2FmMmNlNWJlCgpGQUNFQk9PS19QQUdFX0lEPTxZT1VSX1BBR0VfSURfSEVSRT4KCiMgUGFnZSBhY2Nlc3MgdG9rZW4gZm9yIHNlbmRpbmcgYm90IG1lc3NhZ2VzClBBR0VfQUNDRVNTX1RPS0VOPUVBQVpBZERpN2ZNejhCQVBpVEhZdFZJVXMwTGx6Q3dJMGtqUmw5QlVyZ1RRMmVmMXI4WWl3WkM4bk80d2ZqRlpBMmJmdVgxMFpBNmx1c1NGMVVKRjlWbUh5cFlERlZIZ0dWeUZaQlhyV1BaQ0tYN0pGQUxVVVpBY3l0am5RN1pBblpBZ3ZuTkFXV2RHbTFQWkJOd1JSaXBONVVYTlBnYVpBaDVMUkFlQ2h3UTdpWkNDMGIzbXpoWUJQZlpCR1RRM0Q2YjY2c0RpTVpDQ2VCWkJuV3BDeHZKeGowOWQ5WkFXMgpVU0VSX0FDQ0VTU19UT0tFTj1FQUFaQWREaTdmTXo4QkFEV1JXV2VaQnNhenMwTmxWU2hZME5LRmNlZ0tlMTdqUlFtYlFvbnhJWkJaQUNaQVBjSno5OVpBaVJLcDJQSDJmNjIzUTdURjdFV0JIOU1ZSWs4SFIycW5wZFd5NUxNb2tNRDY5R2RQbVhJVzQ2VzdveG5pTTVKbWlETHUyUHN5SWNDeWlIQWcydFJqWkFDUVBBeDJqY3cyU1pDZUZqOTVCUEhFdUVoTDB4WkFKNzRXOEhaQnZnSWdaRApBUFBfQUNDRVNTX1RPS0VOPTIwNjIwMDcyOTk4MzIwMnxvdGd1QnpKSElqd0xpVU5KYTVKSVcwT0xqMFEKCiMgVG9nZ2xlIHNlY3VyZSBjb21tdW5pY2F0aW9uIG9mZiBmb3IgbG9jYWwgdGVzdGluZyB3aXRoIE1vY2sgU0RLClVTRV9TRUNVUkVfQ09NTVVOSUNBVElPTj0wCgpVUExPQURfQUNDRVNTX1RPS0VOPUVBQVlzZlpBeGlGbU1CQUtzWkJJN0RaQjZ4d3B6WkFHa3NnUTB2TXI5Q05ha3RtZEdhemVja0hiWkExaHl2d1k5V0tMdGhCZk51dDlaQTQyalRidGNEZEN4TUZoVVpCS2xnRTJFNWdKVW5LOUF3QlpDem5wQU9FZlpDdXBCaTBZd3BqYWZoZEVPZHEzd2Q0amI0SU1aQ2ZJR3BaQlBIaVJtRk05N01ReDhaQkFNVFZIM1pCUVpEWkQKAAAAAAAAAABNBgAAAAAAAAAAAAAAAAAAAAAAAE0GAAAAAAAAAAAAAAAAAAAAAAAATQYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF4BAAAAAAAAXgEAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "views/home.html",
			"settings":
			{
				"buffer_size": 6134,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4GAAAAAAAArgYAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4GAAAAAAAArgYAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "app/javascripts/script.js",
			"settings":
			{
				"buffer_size": 54392,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACyfAAAAAAAAJZ8AAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"contents": "var express = require('express');\nvar bodyParser = require('body-parser');\nvar request = require(\"request\")\n\nvar app = express();\nvar port = process.env.PORT || 3000;\n\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://#@ds013911.mlab.com:13911/wyrdbot');\n\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n    console.log(\"We're connceted\")\n});\n\n// body parser middleware\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: true }));\n\napp.listen(port, function () {\n    console.log('Listening on port ' + port);\n});\n\napp.get('/', function (req, res) {\n    if (req.query['hub.verify_token'] === '<myToken>') {\n        res.send(req.query['hub.challenge']);\n        console.log(\"app.get ran\")\n        res.sendStatus(200)\n    }\n\n    res.send(req.query['hub.challenge']);\n})\n\napp.post('/', function (req, res) {\n    console.log(\"app.post ran\")\n    messaging_events = req.body.entry[0].messaging;\n    for (i = 0; i < messaging_events.length; i++) {\n        event = req.body.entry[0].messaging[i];\n        sender = event.sender.id;\n        if (event.message && event.message.text) {\n            text = event.message.text;\n\n            if (text === 'Generic') {\n                sendGenericMessage(sender);\n                continue;\n            }\n\n            sendTextMessage(sender, \"Text received, echo: \"+ text.substring(0, 200));\n\n        }\n    }\n\n    res.sendStatus(200);\n});\n\nvar token = \"<myToken>\";\n\nfunction sendTextMessage(sender, text) {\n    messageData = {\n        text:text\n    }\n    request({\n        url: 'https://graph.facebook.com/v2.6/me/messages',\n        qs: {access_token:token},\n        method: 'POST',\n        json: {\n            recipient: {id:sender},\n            message: messageData,\n        }\n    }, function(error, response, body) {\n        if (error) {\n            console.log('Error sending message: ', error);\n        } else if (response.body.error) {\n            console.log('Error: ', response.body.error);\n        }\n    });\n}\n\nfunction sendGenericMessage(sender) {\n    messageData = {\n        \"attachment\": {\n        \"type\": \"template\",\n            \"payload\": {\n                \"template_type\": \"generic\",\n                \"elements\": [{\n                    \"title\": \"First card\",\n                    \"subtitle\": \"Element #1 of an hscroll\",\n                    \"image_url\": \"http://messengerdemo.parseapp.com/img/rift.png\",\n                    \"buttons\": [{\n                        \"type\": \"web_url\",\n                        \"url\": \"https://www.messenger.com/\",\n                        \"title\": \"Web url\"\n                    },{\n                        \"type\": \"postback\",\n                        \"title\": \"Postback\",\n                        \"payload\": \"Payload for first element in a generic bubble\",\n                    }],\n                },{\n                    \"title\": \"Second card\",\n                    \"subtitle\": \"Element #2 of an hscroll\",\n                    \"image_url\": \"http://messengerdemo.parseapp.com/img/gearvr.png\",\n                    \"buttons\": [{\n                        \"type\": \"postback\",\n                        \"title\": \"Postback\",\n                        \"payload\": \"Payload for second element in a generic bubble\",\n                    }],\n                }]\n            }\n        }\n    };\n\n    request({\n        url: 'https://graph.facebook.com/v2.6/me/messages',\n        qs: {access_token:token},\n        method: 'POST',\n        json: {\n          recipient: {id:sender},\n          message: messageData,\n        }\n    }, function(error, response, body) {\n        if (error) {\n          console.log('Error sending message: ', error);\n        } else if (response.body.error) {\n          console.log('Error: ', response.body.error);\n        }\n    });\n}",
			"settings":
			{
				"buffer_size": 3808,
				"line_ending": "Windows",
				"name": "var express = require('express');"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 3879,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": " ph"
					},
					"AwAAAOYHAAAAAAAA5wcAAAAAAAAAAAAA5wcAAAAAAADoBwAAAAAAAAAAAADoBwAAAAAAAOkHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYHAAAAAAAA5gcAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "rase"
					},
					"BAAAAOkHAAAAAAAA6gcAAAAAAAAAAAAA6gcAAAAAAADrBwAAAAAAAAAAAADrBwAAAAAAAOwHAAAAAAAAAAAAAOwHAAAAAAAA7QcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkHAAAAAAAA6QcAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "Facema"
					},
					"BgAAAAQBAAAAAAAABQEAAAAAAAAAAAAABQEAAAAAAAAGAQAAAAAAAAAAAAAGAQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAACAEAAAAAAAAAAAAACAEAAAAAAAAJAQAAAAAAAAAAAAAJAQAAAAAAAAoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEAQAAAAAAAAQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "sh"
					},
					"AgAAAAoBAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAAMAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKAQAAAAAAAAoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					8,
					"left_delete",
					null,
					"CAAAAAsBAAAAAAAACwEAAAAAAAABAAAAaAoBAAAAAAAACgEAAAAAAAABAAAAcwkBAAAAAAAACQEAAAAAAAABAAAAYQgBAAAAAAAACAEAAAAAAAABAAAAbQcBAAAAAAAABwEAAAAAAAABAAAAZQYBAAAAAAAABgEAAAAAAAABAAAAYwUBAAAAAAAABQEAAAAAAAABAAAAYQQBAAAAAAAABAEAAAAAAAABAAAARg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMAQAAAAAAAAwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "Facemas"
					},
					"BwAAAAQBAAAAAAAABQEAAAAAAAAAAAAABQEAAAAAAAAGAQAAAAAAAAAAAAAGAQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAACAEAAAAAAAAAAAAACAEAAAAAAAAJAQAAAAAAAAAAAAAJAQAAAAAAAAoBAAAAAAAAAAAAAAoBAAAAAAAACwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEAQAAAAAAAAQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "h"
					},
					"AQAAAAsBAAAAAAAADAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALAQAAAAAAAAsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAwBAAAAAAAADQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMAQAAAAAAAAwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"right_delete",
					null,
					"AQAAAA0BAAAAAAAADQEAAAAAAAABAAAASQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANAQAAAAAAAA0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "was"
					},
					"AwAAAA0BAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAPAQAAAAAAAAAAAAAPAQAAAAAAABABAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANAQAAAAAAAA0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAABABAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAASAQAAAAAAAAAAAAASAQAAAAAAABMBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQAQAAAAAAABABAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"left_delete",
					null,
					"AQAAABIBAAAAAAAAEgEAAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATAQAAAAAAABMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					2,
					"right_delete",
					null,
					"AgAAABEBAAAAAAAAEQEAAAAAAAAJAAAAaW5pdGlhbGx5EQEAAAAAAAARAQAAAAAAAAEAAAAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARAQAAAAAAABoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOkBAAAAAAAA6gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpAQAAAAAAAOkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					2,
					"left_delete",
					null,
					"AgAAAOoBAAAAAAAA6gEAAAAAAAABAAAACukBAAAAAAAA6QEAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAQAAAAAAAOsBAAAAAAAAAAAAAAAAAAA"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOkBAAAAAAAA6gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpAQAAAAAAAOkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AQAAAOoBAAAAAAAA6wEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqAQAAAAAAAOoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"left_delete",
					null,
					"AQAAAOoBAAAAAAAA6gEAAAAAAAABAAAARg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAQAAAAAAAOsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "The"
					},
					"AwAAAOoBAAAAAAAA6wEAAAAAAAAAAAAA6wEAAAAAAADsAQAAAAAAAAAAAADsAQAAAAAAAO0BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqAQAAAAAAAOoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " site"
					},
					"BQAAAO0BAAAAAAAA7gEAAAAAAAAAAAAA7gEAAAAAAADvAQAAAAAAAAAAAADvAQAAAAAAAPABAAAAAAAAAAAAAPABAAAAAAAA8QEAAAAAAAAAAAAA8QEAAAAAAADyAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtAQAAAAAAAO0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " was"
					},
					"BAAAAPIBAAAAAAAA8wEAAAAAAAAAAAAA8wEAAAAAAAD0AQAAAAAAAAAAAAD0AQAAAAAAAPUBAAAAAAAAAAAAAPUBAAAAAAAA9gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyAQAAAAAAAPIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPYBAAAAAAAA9wEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2AQAAAAAAAPYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "ref"
					},
					"AwAAAPcBAAAAAAAA+AEAAAAAAAAAAAAA+AEAAAAAAAD5AQAAAAAAAAAAAAD5AQAAAAAAAPoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3AQAAAAAAAPcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "ered"
					},
					"BAAAAPoBAAAAAAAA+wEAAAAAAAAAAAAA+wEAAAAAAAD8AQAAAAAAAAAAAAD8AQAAAAAAAP0BAAAAAAAAAAAAAP0BAAAAAAAA/gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6AQAAAAAAAPoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAP4BAAAAAAAA/wEAAAAAAAAAAAAA/wEAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAECAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+AQAAAAAAAP4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAECAAAAAAAAAgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAgAAAAAAAAECAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAOoBAAAAAAAA6wEAAAAAAAAAAAAA6wEAAAAAAADsAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqAQAAAAAAAOoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"paste",
					null,
					"AQAAAEYFAAAAAAAAXgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGBQAAAAAAAEYFAAAAAAAAAAAAAAAAAAA"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAF4FAAAAAAAAXwUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeBQAAAAAAAF4FAAAAAAAAAAAAAAAAAAA"
				],
				[
					77,
					1,
					"left_delete",
					null,
					"AQAAAF4FAAAAAAAAXgUAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfBQAAAAAAAF8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					1,
					"left_delete",
					null,
					"AQAAADkAAAAAAAAAOQAAAAAAAAADAAAAdG8g",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5AAAAAAAAADwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"cut",
					null,
					"AQAAAJwHAAAAAAAAnAcAAAAAAACiAAAAU3R1Y2tXYW5ZYWggaXMgYSBwdW4gZm9yIHN0YWsgd2FuLCBTdGFrIFdhbiBZYWggb3IgU3R1Y2sgV2FuLiBJdCBoYXMgc3VidGxlIG1lYW5pbmdzLiBJdCBpcyB1c2VkIGV4cGxpY2l0bHkgYXMgYW4gYWRqZWN0aXZhbCBwaHJhc2UgdG8gcmVmZXIgdG8gYSBwZXJzb24ncyBsb29rcy4K",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcBwAAAAAAAD4IAAAAAAAAAAAAAAAAAAA"
				],
				[
					109,
					1,
					"paste",
					null,
					"AQAAAFsFAAAAAAAA/QUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbBQAAAAAAAFsFAAAAAAAAAAAAAAAAAAA"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAP0FAAAAAAAA/gUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9BQAAAAAAAP0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					2,
					"left_delete",
					null,
					"AgAAACcIAAAAAAAAJwgAAAAAAAAYAAAAIyMgV2hhdCBpcyBTdHVja1dhbllhaD8KJggAAAAAAAAmCAAAAAAAAAEAAAAK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnCAAAAAAAAD8IAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"contents": "var liveReqTimeInJS = 180;\nvar redirectDelayInSec = 0.25;\nvar LOGGED_IN = \"LIVE\";\nvar LOGGED_OUT = \"LOGIN\";\nvar CHALLENGE = \"CHALLENGE\";\nvar States = {\n    SIGNED_IN: \"signed_in\",\n    SIGNED_OUT: \"signed_out\",\n    WAITING: \"waiting\",\n    REJECTED: \"rejected\"\n};\nvar Live = {\n    ACK: \"ack\",\n    NACK: \"nack\",\n    OFF: \"live_off\",\n    AGAIN: \"login_again\"\n};\nvar Client = {\n    WEB: \"0\",\n    IOS: \"1\",\n    ANDROID: \"2\"\n};\nvar RedirectURL = {\n    IOS: \"http://ios.cyberoam.com/app/s.html\"\n};\nObject.freeze(States);\nObject.freeze(Live);\nObject.freeze(Client);\nObject.freeze(RedirectURL);\nvar loginstate = null;\nvar producttype = Client.WEB;\nvar timer = \"\";\nvar finalRedirectUrl = \"\";\nvar userAgent = navigator.customUserAgent || navigator.userAgent;\nwindow.onbeforeunload = function() {\n    if (preserveCaptivePortal != \"N\" && keepaliverequest === \"Y\" && getState() === States.SIGNED_IN && !isClientHandheld()) {\n        var a = \"mode=193&username=\" + encodeURIComponent(document.getElementById(\"username\").value) + \"&a=\" + (new Date()).getTime();\n        makeAjaxRequest(\"POST\", a, \"logout.xml\", null, false)\n    }\n}\n;\nvar ViewRender = (function() {\n    function a() {\n        var c = document.getElementById(\"msgDiv\");\n        var e = document.getElementById(\"username\").value;\n        var d = document.getElementById(\"loginbtn\");\n        switch (this.state) {\n        case States.SIGNED_IN:\n            c.style.color = \"green\";\n            c.innerHTML = this.message.replace(/{username}/g, e);\n            d.value = logoutBtnCaption;\n            break;\n        case States.REJECTED:\n            renderMessage(this.message, \"red\");\n            d.value = loginBtnCaption;\n            break;\n        case States.SIGNED_OUT:\n            c.innerHTML = \"\";\n            renderMessage(this.message, \"green\");\n            d.value = loginBtnCaption;\n            break;\n        default:\n            break\n        }\n    }\n    function b() {\n        var d = document.getElementById(\"signin-caption\");\n        var h = document.getElementById(\"credentials\");\n        var c = document.getElementById(\"loggedin-message\");\n        var g = document.getElementById(\"statusmessage\");\n        var e = document.getElementById(\"loginbutton\");\n        var f = document.getElementById(\"registerlink\").children[0];\n        removeSpinner();\n        switch (this.state) {\n        case States.SIGNED_IN:\n            g.className = \"unshown\";\n            h.className = \"loggedin\";\n            c.className = \"loggedin\";\n            e.innerText = logoutBtnCaption;\n            f.style.display = \"none\";\n            var i = document.getElementById(\"username\").value;\n            renderLoginMessage(this.message, i);\n            break;\n        case States.REJECTED:\n            d.innerText = title;\n            renderMessage(this.message, \"red\");\n            h.className = \"loggedout shake\";\n            e.innerText = loginBtnCaption;\n            setTimeout(function() {\n                if (h.className === \"loggedout shake\") {\n                    h.className = \"loggedout\"\n                }\n            }, 500);\n            break;\n        case States.SIGNED_OUT:\n            h.className = \"loggedout\";\n            c.className = \"loggedout\";\n            d.innerText = title;\n            e.innerText = loginBtnCaption;\n            f.style.display = (guestUserRes === 1) ? \"block\" : \"none\";\n            renderMessage(this.message, \"green\");\n            document.title = title;\n            document.getElementById(\"password\").value = \"\";\n            break;\n        case States.WAITING:\n            g.className = \"unshown\";\n            h.className = \"loggedin\";\n            c.className = \"loggedin\";\n            d.innerText = signingIn;\n            e.innerText = loginBtnCaption;\n            renderSpinner();\n            break;\n        default:\n            break\n        }\n    }\n    return {\n        init: function(d, c) {\n            this.state = d;\n            this.message = typeof c == \"undefined\" ? \"\" : c;\n            this.render = enablefullcustomization === \"1\" ? a : b;\n            return this\n        }\n    }\n}\n)();\nfunction submitRequest() {\n    var c;\n    var a = getState();\n    if (a != States.SIGNED_IN && validateLogin()) {\n        var b = replaceAll(document.getElementById(\"username\").value, \"'\", \"''\");\n        c = \"mode=191&username=\" + encodeURIComponent(b) + \"&password=\" + encodeURIComponent(document.getElementById(\"password\").value) + \"&a=\" + (new Date()).getTime() + \"&producttype=\" + producttype;\n        if (loginstate) {\n            c += \"&state=\" + loginstate\n        }\n        ViewRender.init(States.WAITING).render();\n        makeAjaxRequest(\"POST\", c, \"login.xml\", loginResponseHandler)\n    } else {\n        if (a === States.SIGNED_IN) {\n            c = \"mode=193&username=\" + encodeURIComponent(document.getElementById(\"username\").value) + \"&a=\" + (new Date()).getTime() + \"&producttype=\" + producttype;\n            makeAjaxRequest(\"POST\", c, \"logout.xml\", logoutResponseHandler)\n        }\n    }\n}\nfunction validateLogin() {\n    var b = false;\n    var a = \"\";\n    if (document.getElementById(\"username\").value.replace(/ /g, \"\").length === 0) {\n        a = enterUsername;\n        document.getElementById(\"username\").focus()\n    } else {\n        if (document.getElementById(\"password\").value.length === 0) {\n            a = enterPassword;\n            document.getElementById(\"password\").focus()\n        } else {\n            b = true\n        }\n    }\n    renderMessage(a, \"red\");\n    return b\n}\nfunction initializeField(d, b, a) {\n    var c = document.getElementById(d);\n    if (c && b && typeof a === \"string\") {\n        c.setAttribute(b, a);\n        c[b] = a\n    }\n}\nfunction setup() {\n    document.title = title;\n    if ((navigator.userAgent.match(/iPhone/i)) || (navigator.userAgent.match(/iPad/i))) {\n        producttype = Client.IOS\n    } else {\n        if (navigator.userAgent.match(/android/i)) {\n            producttype = Client.ANDROID\n        }\n    }\n    if (enablefullcustomization === \"1\") {\n        renderLoginBox()\n    }\n    var d = document.getElementById(\"logo\");\n    if (d) {\n        var f = d.children[0];\n        if (f) {\n            var c = f.getAttribute(\"href\");\n            if (c.indexOf(\"http\") === -1) {\n                f.setAttribute(\"href\", \"http://\" + c)\n            }\n        }\n    }\n    var b = location.host.substring(0, location.host.lastIndexOf(\":\"));\n    var e = \"https://\" + b + \":\" + userportalport + \"/userportal/webpages/myaccount/login.jsp\";\n    var a = document.getElementById(\"myaccountcaption\");\n    a.setAttribute(\"href\", e);\n    a.setAttribute(\"target\", \"_blank\");\n    initializeField(\"username\", \"placeholder\", usernameCaption);\n    initializeField(\"password\", \"placeholder\", passwordCaption);\n    initializeField(\"registercaption\", \"text\", registerCaption);\n    initializeField(\"myaccountcaption\", \"text\", myaccountCaption);\n    initializeField(\"loginbutton\", \"innerText\", loginBtnCaption);\n    initializeField(\"signin-caption\", \"innerText\", title);\n    initializeField(\"donotclosepage\", \"innerText\", doNotClosePage);\n    initializeField(\"willbesignedout\", \"innerText\", willBeSignedOut);\n    setListeners()\n}\nfunction setListeners() {\n    addOnclick(document.getElementById(\"registerlink\"), function() {\n        var a = document.URL.split(\"8090\")[0] + \"8090/webconsole/webpages/guestportal/GuestUserEdit.jsp\";\n        a = a.replace(/^http:\\/\\//i, \"https://\");\n        openRegisterWindow(a)\n    });\n    addOnclick(document.getElementById(\"logo\"), function() {\n        var a = document.getElementById(\"logo\").children[0];\n        if (a) {\n            window.open(a.getAttribute(\"href\"))\n        }\n    });\n    document.addEventListener(\"keydown\", function(a) {\n        switch (a.keyCode) {\n        case 13:\n            if (enablefullcustomization === \"0\") {\n                document.getElementById(\"loginbutton\").parentNode.click();\n                a.preventDefault()\n            }\n            break;\n        case 116:\n            a.preventDefault();\n            break\n        }\n    })\n}\nfunction openRegisterWindow(d) {\n    var a = (window.screen.width - 750) / 2;\n    var e = (window.screen.height - 500) / 2;\n    var b = \"status=yes, height=450,width=650,resizable=no,left=\" + a + \",top=\" + e + \",screenX=\" + a + \",screenY=\" + e + \",scrollbars=no\";\n    var c = (typeof window.opener != \"undefined\" && navigator.userAgent.indexOf(\"MSIE\") != -1) ? window.opener.open(d, \"registerLink\", b) : window.open(d, \"registerLink\", b);\n    c.focus()\n}\nfunction getState() {\n    return enablefullcustomization === \"1\" ? getStateCustom() : getStateDefault()\n}\nfunction getStateCustom() {\n    var b = \"\";\n    var a = document.getElementById(\"msgDiv\");\n    if (a.innerHTML.length === 0) {\n        b = States.SIGNED_OUT\n    } else {\n        if (a.style.color === \"red\") {\n            b = States.REJECTED\n        } else {\n            b = States.SIGNED_IN\n        }\n    }\n    return b\n}\nfunction getStateDefault() {\n    var a = \"\";\n    if (document.getElementById(\"statusmessage\").className.indexOf(\"red\") != -1) {\n        a = States.REJECTED\n    } else {\n        if (document.getElementById(\"credentials\").className.indexOf(\"loggedout\") != -1) {\n            a = States.SIGNED_OUT\n        } else {\n            if (document.getElementById(\"spinner-view\").style.display === \"block\") {\n                a = States.WAITING\n            } else {\n                a = States.SIGNED_IN\n            }\n        }\n    }\n    return a\n}\nfunction getTagValue(c, a) {\n    var b = c.getElementsByTagName(a);\n    return b && b.length > 0 ? b[0].firstChild.nodeValue : undefined\n}\nfunction isClientAndroid() {\n    return (producttype === Client.ANDROID)\n}\nfunction isClientIOS() {\n    return (producttype === Client.IOS && userAgent.match(/mozilla/i) && userAgent.match(/applewebkit/i) && userAgent.match(/mobile/i) && !userAgent.match(/safari/i))\n}\nfunction isClientHandheld() {\n    return (isClientAndroid() || isClientIOS())\n}\nfunction loginResponseHandler(d) {\n    var c = \"\";\n    var b = d.documentElement;\n    var a = getTagValue(b, \"status\");\n    loginstate = a == CHALLENGE ? getTagValue(b, \"state\") : null;\n    if (a === LOGGED_IN) {\n        if (isClientIOS()) {\n            handleIOSRedirect()\n        } else {\n            if (displayWebpage === \"1\") {\n                if (isClientAndroid()) {\n                    handleAndroidRedirect()\n                } else {\n                    handleBrowserRedirect()\n                }\n            }\n        }\n        c = States.SIGNED_IN\n    } else {\n        if (a === LOGGED_OUT) {\n            c = States.REJECTED\n        }\n    }\n    ViewRender.init(c, getTagValue(b, \"message\")).render();\n    setTimeForLiveRequest(liveReqTimeInJS)\n}\nfunction logoutResponseHandler(c) {\n    var b = c.documentElement;\n    var a = getTagValue(b, \"status\");\n    if (a === LOGGED_OUT) {\n        clearTimeout(timer);\n        ViewRender.init(States.SIGNED_OUT, getTagValue(b, \"message\")).render()\n    }\n}\nfunction getRedirectUrl() {\n    if (location.href.indexOf(\"u=\") != -1) {\n        return location.href.substring(location.href.indexOf(\"u=\") + 2)\n    }\n    if (redirectTo) {\n        if (redirectTo.indexOf(\"http\") === -1) {\n            redirectTo = \"http://\" + redirectTo\n        }\n        return redirectTo\n    }\n    return \"\"\n}\nfunction redirectToFinalUrl() {\n    location.href = finalRedirectUrl\n}\nfunction handleIOSRedirect() {\n    finalRedirectUrl = RedirectURL.IOS;\n    redirectToFinalUrl()\n}\nfunction handleAndroidRedirect() {\n    finalRedirectUrl = getRedirectUrl();\n    redirectToFinalUrl()\n}\nfunction handleBrowserRedirect() {\n    finalRedirectUrl = getRedirectUrl();\n    setTimeout(function() {\n        if (preserveCaptivePortal === \"Y\") {\n            window.open(finalRedirectUrl)\n        } else {\n            redirectToFinalUrl()\n        }\n    }, redirectDelayInSec * 1000)\n}\nfunction renderLoginMessage(c, d) {\n    var a = document.getElementById(\"signin-caption\");\n    var b = c.replace(/{username}/g, d);\n    a.innerText = b;\n    document.title = b\n}\nfunction renderMessage(c, a) {\n    var b = document.getElementById(\"statusmessage\");\n    if (enablefullcustomization === \"1\") {\n        b.style.color = a;\n        b.style.marginTop = \"10px\"\n    } else {\n        b.className = a\n    }\n    b.innerHTML = c\n}\nfunction renderSpinner() {\n    document.getElementById(\"loggedin-view\").style.display = \"none\";\n    document.getElementById(\"spinner-view\").style.display = \"block\"\n}\nfunction removeSpinner() {\n    document.getElementById(\"loggedin-view\").style.display = \"block\";\n    document.getElementById(\"spinner-view\").style.display = \"none\"\n}\nfunction getQueryString(a) {\n    return Object.keys(a).map(function(b) {\n        return b + \"=\" + a[b]\n    }).join(\"&\")\n}\nfunction sendLiveRequest() {\n    var a = {\n        mode: \"192\",\n        username: encodeURIComponent(document.getElementById(\"username\").value),\n        a: (new Date()).getTime(),\n        producttype: producttype\n    };\n    invokeAjaxURL(\"live?\" + getQueryString(a), \"get\")\n}\nfunction setTimeForLiveRequest(a) {\n    clearTimeout(timer);\n    if (a != -1) {\n        timer = setTimeout(sendLiveRequest, a * 1000)\n    }\n}\nfunction parseXML(c) {\n    if (!c) {\n        setTimeForLiveRequest(liveReqTimeInJS);\n        return\n    }\n    var a = c.documentElement;\n    var d = \"\";\n    try {\n        d = getTagValue(a, \"ack\");\n        if (d == Live.ACK) {\n            setTimeForLiveRequest(liveReqTimeInJS)\n        } else {\n            if (d == Live.NACK || d == Live.AGAIN) {\n                clearTimeout(timer);\n                ViewRender.init(States.SIGNED_OUT).render()\n            } else {\n                if (d == Live.OFF) {}\n            }\n        }\n    } catch (b) {}\n}\nfunction renderLoginBox() {\n    var d = createElement(\"div\", {\n        id: \"msgDiv\"\n    }, []);\n    var c = createElement(\"div\", {\n        id: \"credentials\",\n        style: \"margin:15px;\"\n    }, [createElement(\"input\", {\n        id: \"username\",\n        placeholder: usernameCaption,\n        type: \"text\"\n    }), createElement(\"input\", {\n        id: \"password\",\n        placeholder: passwordCaption,\n        type: \"password\"\n    }), createElement(\"input\", {\n        id: \"loginbtn\",\n        type: \"button\",\n        value: loginBtnCaption,\n        onclick: \"submitRequest()\"\n    }), createElement(\"div\", {\n        \"class\": \"statusmessagerow\"\n    }, [createElement(\"div\", {\n        id: \"statusmessage\",\n        \"class\": \"unshown\"\n    })])]);\n    var b = createElement(\"ul\", {\n        id: \"links\"\n    }, [createElement(\"li\", {\n        id: \"userportallink\"\n    }, [createElement(\"a\", {\n        id: \"myaccountcaption\",\n        style: \"display:\" + (myAccountLink === \"1\" ? \"block;\" : \"none;\"),\n        href: \"#\"\n    }, myaccountCaption)]), createElement(\"li\", {\n        id: \"registerlink\"\n    }, [createElement(\"a\", {\n        id: \"registercaption\",\n        style: \"display:\" + (guestUserRes === \"1\" ? \"block;\" : \"none;\"),\n        href: \"#\"\n    }, registerCaption)])]);\n    var a = document.getElementById(\"__loginbox\");\n    a.appendChild(d);\n    a.appendChild(c);\n    a.appendChild(b)\n}\nfunction createElement(a, b, d) {\n    var c = document.createElement(a);\n    Object.keys(b).forEach(function(e) {\n        c.setAttribute(e, b[e])\n    });\n    if (typeof d === \"string\") {\n        c.appendChild(document.createTextNode(d))\n    } else {\n        if (Array.isArray(d)) {\n            d.forEach(function(e) {\n                c.appendChild(e)\n            })\n        }\n    }\n    return c\n}\nfunction addOnclick(a, b) {\n    if (a) {\n        a.onclick = b\n    }\n}\nfunction replaceAll(c, d, b) {\n    var a = 0;\n    while ((a = c.indexOf(d, a)) > -1) {\n        c = c.substring(0, a) + b + c.substring(a + 1);\n        a = a + b.length\n    }\n    return c\n}\nfunction makeAjaxRequest(i, h, a, g, b) {\n    function f() {\n        ViewRender.init(a === \"logout.xml\" ? States.SIGNED_IN : States.SIGNED_OUT).render()\n    }\n    var c = getAjaxObject();\n    c.addEventListener(\"error\", f);\n    if (g) {\n        c.onreadystatechange = getReadyStateHandler(c, g)\n    }\n    try {\n        c.open(i, a, (typeof b === \"undefined\") ? true : b);\n        c.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        c.send(h)\n    } catch (d) {\n        f()\n    }\n}\nfunction removeOverlay() {}\n;",
			"settings":
			{
				"buffer_size": 16247,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "var email = null,\n\tapi_key = null,\n\tfollowingSites = [],\n\tlastContainer = '';\nvar loginKey = \"login_session\",\n\tfollowingSitesKey = \"following_sites\";\nvar defaultText = \"Do you know what runs a website? Visit whatruns.com\";\n$(document).ready(function(e) {\n\tvar popupExt = {\n\t\tcurrent: '',\n\t\tinit: function() {\n\t\t\tcurrent = popupExt;\n\t\t\tthis.setGlobalItems();\n\t\t\tthis.initClickEvents();\n\t\t\t//this.initTooltip();\n\t\t\tthis.initSubmitEvents();\n\t\t},\n\t\tsetGlobalItems: function() {\n\t\t\ttry {\n\t\t\t\tvar sendMessage = function(tabs) {\n\t\t\t\t\tBROWSER.runtime.sendMessage({\n\t\t\t\t\t\tid: GET_HOST_NAME,\n\t\t\t\t\t\ttab: tabs[0]\n\t\t\t\t\t}, function(res) {\n\t\t\t\t\t\tcurrentHostName = current.getCurrentHostName(res);\n\t\t\t\t\t\tcurrent.getLocalStorageItem(loginKey, function(item) {\n\t\t\t\t\t\t\tvar data = (item.hasOwnProperty(loginKey)) ? current.parseJsonStr(item[loginKey]) : {};\n\t\t\t\t\t\t\temail = (typeof data.email != \"undefined\") ? data.email : null;\n\t\t\t\t\t\t\tapi_key = (typeof data.api_key != \"undefined\") ? data.api_key : null;\n\t\t\t\t\t\t\tcurrent.getLocalStorageItem(followingSitesKey, function(item) {\n\t\t\t\t\t\t\t\tfollowingSites = (item.hasOwnProperty(followingSitesKey)) ? current.parseJsonStr(item[followingSitesKey]) : [];\n\t\t\t\t\t\t\t\tcurrent.enableHeaderButtons();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tself.tabQuery(sendMessage);\n\t\t\t} catch (e) {}\n\t\t},\n\t\tgetCurrentHostName: function(data) {\n\t\t\ttry {\n\t\t\t\tvar hostname = data.hostname;\n\t\t\t\tif (invalidDomains.indexOf(hostname) >= 0 || hostname == \"newtab\") return \"\";\n\t\t\t\tif (typeof data.rawhostname != \"undefined\") return data.rawhostname;\n\t\t\t\telse if (typeof data.tabTechs.rawhostname != \"undefined\") return data.tabTechs.rawhostname;\n\t\t\t\telse if (typeof data.hostname != \"undefined\") return data.hostname;\n\t\t\t\telse if (typeof data.tabTechs.hostname != \"undefined\") return data.tabTechs.hostname;\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t\treturn \"\";\n\t\t},\n\t\tsetData: function(data) {\n\t\t\ttry {\n\t\t\t\tBROWSER.storage.local.set(data);\n\t\t\t} catch (e) {}\n\t\t},\n\t\tgetLocalStorageItem: function(key, callback) {\n\t\t\tBROWSER.storage.local.get(key, callback);\n\t\t},\n\t\tenableHeaderButtons: function() {\n\t\t\tfollowingSites = (followingSites instanceof Array) ? followingSites : JSON.parse(followingSites);\n\t\t\tif (followingSites.indexOf(currentHostName) !== -1) {\n\t\t\t\t$('.user-already-following').addClass(\"active\");\n\t\t\t} else {\n\t\t\t\t$('.user-follow').addClass(\"active\");\n\t\t\t}\n\t\t\tif (followingSites.length > 0) {\n\t\t\t\t$('.user-following').addClass(\"active\");\n\t\t\t}\n\t\t\t$('.share-url').addClass(\"active\");\n\t\t\tcurrent.updateUserFollowingTitleToolTip(\"Following \" + followingSites.length + \" Sites\");\n\t\t},\n\t\tupdateUserFollowingTitleToolTip: function(title) {\n\t\t\t$('.user-following').attr(\"title\", title);\n\t\t},\n\t\tinitClickEvents: function() {\n\t\t\tthis.initFollowEvent();\n\t\t\tthis.initFollowingEvent();\n\t\t\tthis.initBackEvent();\n\t\t\tthis.initSigninEvent();\n\t\t\tthis.initSignupEvent();\n\t\t\tthis.initShareEvent();\n\t\t\tthis.initShareFacebookEvent();\n\t\t\tthis.initShareEmailEvent();\n\t\t\tthis.initUnFollowEvent();\n\t\t},\n\t\tinitSubmitEvents: function() {\n\t\t\tthis.formSubmit();\n\t\t\tthis.sendEmail();\n\t\t},\n\t\tinitFollowEvent: function() {\n\t\t\t$('.btn-follow').click(function(e) {\n\t\t\t\tif (followingSites.length < 10) current.isLoggedIn();\n\t\t\t});\n\t\t},\n\t\tinitFollowingEvent: function() {\n\t\t\t$('.btn-following').click(function(e) {\n\t\t\t\tif (followingSites.length > 0) {\n\t\t\t\t\t$('.image-loader').show();\n\t\t\t\t\tcurrent.getFollowingSites();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tinitBackEvent: function() {\n\t\t\t$('.btn-back').click(function(e) {\n\t\t\t\t$('.header-btn, .container').removeClass(\"active\");\n\t\t\t\tif (current.isValidUser()) {\n\t\t\t\t\t$('.user-following').addClass(\"active\");\n\t\t\t\t} else {\n\t\t\t\t\t$('.user-follow').addClass(\"active\");\n\t\t\t\t}\n\t\t\t\tif (lastContainer.trim().length > 0) {\n\t\t\t\t\t$('.back').addClass(\"active\");\n\t\t\t\t\t$(lastContainer).addClass('active');\n\t\t\t\t\tlastContainer = '';\n\t\t\t\t} else {\n\t\t\t\t\t$('.current-app-info, .share-url').addClass(\"active\");\n\t\t\t\t}\n\t\t\t\tif (followingSites.indexOf(currentHostName) > -1) $('.user-already-following').addClass(\"active\");\n\t\t\t\telse $('.user-follow').addClass(\"active\");\n\t\t\t\tif ($('.container').hasClass(\"newtab-text\")) $('.user-following').addClass(\"active\");\n\t\t\t});\n\t\t},\n\t\tinitSigninEvent: function() {\n\t\t\t$('.btn-signin').click(function(e) {\n\t\t\t\tcurrent.showSignInForm();\n\t\t\t});\n\t\t},\n\t\tinitSignupEvent: function() {\n\t\t\t$('.btn-signup').click(function(e) {\n\t\t\t\tcurrent.showSignUPForm();\n\t\t\t});\n\t\t},\n\t\tinitShareEvent: function() {\n\t\t\t$('.btn-share').click(function(e) {\n\t\t\t\tcurrent.showShareURLForm();\n\t\t\t});\n\t\t},\n\t\tinitShareFacebookEvent: function() {\n\t\t\t$('.share-facebook').click(function(e) {\n\t\t\t\tvar url = encodeURIComponent($('.share-url-original').val());\n\t\t\t\twindow.open(\"https://www.facebook.com/sharer/sharer.php?u=\" + url, \"myWindowName\", \"width=600, height=600\");\n\t\t\t\treturn false;\n\t\t\t});\n\t\t},\n\t\tinitShareEmailEvent: function() {\n\t\t\t$('.share-email').click(function(e) {\n\t\t\t\tlastContainer = '.share-container';\n\t\t\t\tcurrent.showShareEmailForm();\n\t\t\t});\n\t\t},\n\t\tinitUnFollowEvent: function() {\n\t\t\t$(document).on(\"click\", '.btn-unfollow', function(e) {\n\t\t\t\tvar followingSiteName = $(this).closest('.list').find('.following-sitename').val();\n\t\t\t\t$(this).closest('.list').remove();\n\t\t\t\tcurrent.updateUnFollowSite(followingSiteName);\n\t\t\t});\n\t\t},\n\t\tshowSignInForm: function() {\n\t\t\t$('.container, .header-btn').removeClass(\"active\");\n\t\t\t$('.signin, .back').addClass(\"active\");\n\t\t},\n\t\tshowSignUPForm: function() {\n\t\t\t$('.container').removeClass(\"active\")\n\t\t\t$('.signup').addClass(\"active\")\n\t\t},\n\t\tshowShareEmailForm: function() {\n\t\t\t$('.container').removeClass(\"active\");\n\t\t\t$('.email-share-container').addClass(\"active\");\n\t\t},\n\t\tshowShareURLForm: function() {\n\t\t\t$('.container, .share-url').removeClass(\"active\");\n\t\t\t$('.share-container').addClass(\"active\");\n\t\t\t$('.back').addClass(\"active\");\n\t\t\tvar twitterUrl = \"https://twitter.com/share?text=\" + encodeURIComponent(defaultText) + \"&via=whatruns\";\n\t\t\tif (currentHostName.trim().length > 0) {\n\t\t\t\tvar url = DOMAIN_NAME + \"website/\" + encodeURIComponent(currentHostName);\n\t\t\t\t$('.share-url-original').val(url);\n\t\t\t\tvar text = \"Do you know what runs \" + currentHostName + \"?\";\n\t\t\t\tvar twitterUrl = \"https://twitter.com/share?url=\" + encodeURIComponent(url) + \"&text=\" + encodeURIComponent(text) + \"&via=whatruns\";\n\t\t\t}\n\t\t\t$('.twitter-share-href').attr(\"href\", twitterUrl);\n\t\t},\n\t\tisLoggedIn: function() {\n\t\t\ttry {\n\n\t\t\t\tif (current.isValidUser()) {\n\t\t\t\t\tif (followingSites.indexOf(currentHostName) <= -1) {\n\t\t\t\t\t\tfollowingSites.push(currentHostName);\n\t\t\t\t\t\tvar itemData = {\n\t\t\t\t\t\t\t\"following_sites\": JSON.stringify(followingSites)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrent.setData(itemData);\n\t\t\t\t\t\tcurrent.followSite();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrent.getFollowingSites();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcurrent.showSignInForm();\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t},\n\t\tfollowSite: function() {\n\t\t\ttry {\n\n\t\t\t\t$.ajax({\n\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\turl: DOMAIN_NAME + \"api/follow\",\n\t\t\t\t\tdata: \"email=\" + email + \"&hostname=\" + currentHostName,\n\t\t\t\t\tsuccess: function(response) {\n\t\t\t\t\t\t//appendNewFollowingSite();\n\t\t\t\t\t\tcurrent.getFollowingSites();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (e) {}\n\t\t},\n\t\tgetFollowingSites: function() {\n\t\t\ttry {\n\t\t\t\tif (email && api_key) {\n\t\t\t\t\tif ($('.following-sites-list').is(':empty')) {\n\t\t\t\t\t\tvar data = current.getUserCredentials();\n\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\t\turl: DOMAIN_NAME + \"api/get_following\",\n\t\t\t\t\t\t\tsuccess: function(response) {\n\t\t\t\t\t\t\t\tcurrent.appendFollowingSites(response);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrent.showFollowingSites();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t},\n\t\tappendFollowingSites: function(response) {\n\n\t\t\ttry {\n\t\t\t\tif (typeof response != \"undefined\") {\n\t\t\t\t\tif (typeof response.following_sites != \"undefined\") {\n\t\t\t\t\t\t$('.following-sites-list').empty();\n\t\t\t\t\t\tvar following_sites = response.following_sites;\n\t\t\t\t\t\tObject.keys(following_sites).forEach(function(siteName) {\n\t\t\t\t\t\t\tvar siteDetectedApps = (typeof following_sites[siteName] === \"object\") ? following_sites[siteName] : JSON.parse(following_sites[siteName]);\n\t\t\t\t\t\t\tcurrent.appendAppDetails(siteDetectedApps, siteName, response.days);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcurrent.showFollowingSites();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t},\n\t\tshowFollowingSites: function() {\n\t\t\tsetTimeout(function() {\n\t\t\t\tcurrent.showBackButton();\n\t\t\t\t$('.container').removeClass(\"active\")\n\t\t\t\t$('.following').addClass(\"active\");\n\t\t\t\t$('.image-loader').hide();\n\t\t\t}, 500);\n\t\t},\n\t\tshowBackButton: function() {\n\t\t\t$('.header-btn').removeClass(\"active\");\n\t\t\t$('.back').addClass(\"active\");\n\t\t},\n\t\tappendAppDetails: function(detectedSiteApps, hostname, daysDiff) {\n\t\t\ttry {\n\t\t\t\tvar list = $('<div class=\"list\"></div>');\n\t\t\t\tvar headerEl = $('<div class=\"following-heading\"><div class=\"following-hostname inline\">' + hostname + '</div><div class=\"inline unfollow\"></div><input type=\"hidden\" class=\"hide following-sitename\" value=\"' + hostname + '\"></div>');\n\t\t\t\tvar unfollowEl = $('<button class=\"btn btn-sm btn-gray sm-1 btn-unfollow\">Unfollow</button>');\n\t\t\t\t$(list).append($(headerEl));\n\t\t\t\t$(list).find('.unfollow').append($(unfollowEl));\n\t\t\t\tfor (var time in detectedSiteApps) {\n\t\t\t\t\tvar apps = detectedSiteApps[time];\n\t\t\t\t\tvar totalApps = [];\n\t\t\t\t\tObject.keys(apps).forEach(function(categoryName) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvar arr = apps[categoryName];\n\t\t\t\t\t\t\tfor (var i in arr) {\n\t\t\t\t\t\t\t\tvar techJson = arr[i];\n\t\t\t\t\t\t\t\tif (totalApps.indexOf(techJson.name) <= -1) {\n\t\t\t\t\t\t\t\t\ttotalApps.push(techJson.name);\n\t\t\t\t\t\t\t\t\tvar date = current.getDateFormat(techJson.latestDetectedTime);\n\t\t\t\t\t\t\t\t\tvar imageUrl = \"http://scriptsused.com/images/icons/\" + techJson.icon;\n\t\t\t\t\t\t\t\t\tvar imgEl = $('<div class=\"app-body inline\"><div class=\"image\"><a href=\"' + techJson.website + '\" target=\"_blank\"  data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"' + techJson.name + ' <br/> Last Detected: ' + date + '\"><img src=\"' + imageUrl + '\"></a></div><div class=\"border-bottom-green\" ></div></div>');\n\t\t\t\t\t\t\t\t\t$(list).append($(imgEl));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tconsole.log(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t$('.following-sites-list').append($(list));\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t},\n\t\tupdateUnFollowSite: function(followingSiteName) {\n\t\t\tif (current.isValidUser()) {\n\t\t\t\tvar data = {\n\t\t\t\t\temail: email,\n\t\t\t\t\tapi_key: api_key,\n\t\t\t\t\thostname: followingSiteName\n\t\t\t\t}\n\t\t\t\t$.ajax({\n\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\tdata: data,\n\t\t\t\t\turl: DOMAIN_NAME + \"api/unfollow\",\n\t\t\t\t\tsuccess: function(response) {\n\t\t\t\t\t\tvar index = followingSites.indexOf(followingSiteName);\n\t\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\t\tfollowingSites.splice(index, 1);\n\t\t\t\t\t\t\tvar itemData = {\n\t\t\t\t\t\t\t\tfollowing_sites: JSON.stringify(followingSites)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrent.setData(itemData);\n\t\t\t\t\t\t\tcurrent.updateUserFollowingTitleToolTip(\"Following \" + followingSites.length + \" Sites\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tformSubmit: function() {\n\t\t\t$('.form').on(\"submit\", function(e) {\n\t\t\t\tconsole.log(e);\n\t\t\t\te.preventDefault();\n\t\t\t\tvar data = $(this).serialize();\n\t\t\t\tvar method = $(this).attr(\"method\");\n\t\t\t\tvar url = DOMAIN_NAME + $(this).attr(\"url\");\n\t\t\t\tvar formData = {\n\t\t\t\t\tdata: data,\n\t\t\t\t\tmethod: method,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\t\t\t\tvar $this = $(this);\n\t\t\t\tBROWSER.runtime.sendMessage({\n\t\t\t\t\tid: \"form\",\n\t\t\t\t\tsubject: formData\n\t\t\t\t}, function(response) {\n\t\t\t\t\tif (response.status != 200) {\n\t\t\t\t\t\t$this.find('.result').addClass(\"error\");\n\t\t\t\t\t\t$this.find('.result').text(response.msg);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (typeof response.api_key != \"undefined\") current.setLoginData(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tsetLoginData: function(res) {\n\t\t\ttry {\n\t\t\t\temail = res.email;\n\t\t\t\tapi_key = res.api_key;\n\t\t\t\tvar itemData = {\n\t\t\t\t\temail: email,\n\t\t\t\t\tapi_key: api_key\n\t\t\t\t}\n\t\t\t\tvar data = {\n\t\t\t\t\t\"login_session\": JSON.stringify(itemData),\n\t\t\t\t\t\"following_sites\": JSON.stringify(followingSites)\n\t\t\t\t}\n\t\t\t\tthis.setData(data);\n\t\t\t\tthis.appendNewFollowingSite();\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t},\n\t\tappendNewFollowingSite: function() {\n\t\t\ttry {\n\t\t\t\tthis.showBackButton();\n\t\t\t\tthis.appendAppDetails(detectedApps, currentHostName);\n\t\t\t\tif (followingSites.indexOf(currentHostName) <= -1) {\n\t\t\t\t\tfollowingSites.push(currentHostName);\n\t\t\t\t\tvar itemData = {\n\t\t\t\t\t\t\"following_sites\": JSON.stringify(followingSites)\n\t\t\t\t\t}\n\t\t\t\t\tthis.setData(itemData);\n\t\t\t\t}\n\t\t\t\tthis.showFollowingSites();\n\t\t\t\t$('.user-follow').removeClass(\"active\");\n\t\t\t\t$('.back').addClass(\"active\");\n\t\t\t\tthis.updateUserFollowingTitleToolTip(\"Following \" + followingSites.length + \" Sites\");\n\t\t\t} catch (e) {}\n\t\t},\n\t\tsendEmail: function() {\n\t\t\t$('#email-share-form').on('submit', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tvar $this = $(this);\n\t\t\t\t$(this).find('.result').empty();\n\t\t\t\tvar btnEl = $(this).find('.share-email-submit');\n\t\t\t\tvar text = $(btnEl).text();\n\t\t\t\t$(btnEl).empty();\n\t\t\t\t$(btnEl).append('Sending...');\n\t\t\t\t// $(btnEl).append('<i class=\"fa fa-spinner fa-spin fa-fw\" aria-hidden=\"true\"></i>');\n\t\t\t\t$.ajax({\n\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\tdata: $(this).serialize() + \"&domain=\" + currentHostName,\n\t\t\t\t\turl: DOMAIN_NAME + \"share/email\",\n\t\t\t\t\tsuccess: function(res) {\n\t\t\t\t\t\t$(btnEl).empty();\n\t\t\t\t\t\tif (res.status == 200) {\n\t\t\t\t\t\t\t$(btnEl).append('<img src=\"images/Tick.png\" style=\"max-width:10px;\"><span style=\"margin-left:5px;\">Sent</span>');\n\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\t$(btnEl).empty();\n\t\t\t\t\t\t\t\t$(btnEl).append(text);\n\t\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$(btnEl).append(text);\n\t\t\t\t\t\t\t$this.find('.result').text(res.msg);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t});\n\t\t},\n\t\tgetUserCredentials: function() {\n\t\t\tvar userCredentials = \"email=\" + email + \"&api_key=\" + api_key;\n\t\t\tuserCredentials += \"&domains=\" + JSON.stringify(followingSites);\n\t\t\treturn userCredentials;\n\t\t},\n\t\tparseJsonStr: function(str) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(str);\n\t\t\t} catch (e) {}\n\t\t},\n\t\tgetDateFormat: function(timestamp) {\n\t\t\ttry {\n\t\t\t\tvar date = new Date(parseInt(timestamp));\n\t\t\t\tvar month = current.getMonthName(date);\n\t\t\t\treturn month + \" \" + date.getFullYear();\n\t\t\t} catch (e) {}\n\t\t\treturn \"\";\n\t\t},\n\t\tgetMonthName: function(d) {\n\t\t\ttry {\n\t\t\t\tvar monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\t\t\t\t\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t\t\t\t];\n\t\t\t\treturn monthNames[d.getMonth()];\n\t\t\t} catch (e) {}\n\t\t},\n\t\tisValidUser: function() {\n\t\t\ttry {\n\t\t\t\treturn (email && api_key && email.trim().length > 0 && api_key.trim().length > 0);\n\t\t\t} catch (e) {\n\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\tpopupExt.init();\n\t$('body').tooltip({\n\t\tselector: '[data-toggle=tooltip]',\n\t\thtml: true\n\t});\n\n});",
			"settings":
			{
				"buffer_size": 14486,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "var Channel;\n(function (Channel) {\n    var Social;\n    (function (Social) {\n        var facebookPermissionCodes = {\n            noEmailProvided: \"no_email_provided\",\n            notAuthorized: \"not_authorized\",\n            email: \"email\",\n            noEmailPermission: \"no_email_permission\"\n        };\n        var facebookStatusCodes = {\n            declined: \"declined\",\n            granted: \"granted\",\n            connected: \"connected\"\n        };\n        var Facebook = /** @class */ (function () {\n            function Facebook() {\n                var _this = this;\n                this.rerequest = function (resolve, reject) {\n                    _this.fbLogin(resolve, reject, \"rerequest\");\n                };\n                this.fbLogin = function (resolve, reject, authType) {\n                    var options = { scope: Facebook.setting.scope };\n                    if (authType) {\n                        options.auth_type = authType;\n                    }\n                    FB.login(function (response) {\n                        if (response.authResponse) {\n                            FB.getLoginStatus(function () {\n                                if (response.authResponse === null) {\n                                    setTimeout(function () {\n                                        reject({ success: false, reason: \"cancel\" });\n                                    }, 1000);\n                                }\n                                else {\n                                    _this.userDetailsFromFb().then(function (fbResponse) {\n                                        if (Facebook.ignoreEmailPermissions) {\n                                            resolve({ success: true, authResponse: response.authResponse, userData: fbResponse });\n                                        }\n                                        for (var i = 0; i < fbResponse.permissions.data.length; i++) {\n                                            var currentPermission = fbResponse.permissions.data[i];\n                                            if (currentPermission.permission === facebookPermissionCodes.email) {\n                                                if (currentPermission.status === facebookStatusCodes.granted) {\n                                                    if (!fbResponse.email || typeof fbResponse.email === \"undefined\") {\n                                                        reject({ success: false, reason: facebookPermissionCodes.noEmailProvided });\n                                                        return;\n                                                    }\n                                                    else {\n                                                        resolve({ success: true, authResponse: response.authResponse, userData: fbResponse });\n                                                        return;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        reject({ success: false, reason: facebookPermissionCodes.noEmailPermission });\n                                    });\n                                }\n                            });\n                        }\n                        else {\n                            reject({ success: false, reason: \"cancel\" });\n                        }\n                    }, options);\n                };\n                this.isLoggedInAndAuthorized = function () {\n                    return new Promise(function (resolve, reject) {\n                        var result = _this.checkLoginStatus();\n                        if (result.success) {\n                            _this.userDetailsFromFb().then(function (user) {\n                                if (user.permissions) {\n                                    for (var i = 0; i < user.permissions.data.length; i++) {\n                                        var currentPermission = user.permissions.data[i];\n                                        if (!Facebook.ignoreEmailPermissions &&\n                                            currentPermission.permission === facebookPermissionCodes.email) {\n                                            if (currentPermission.status === facebookStatusCodes.declined) {\n                                                if (!user.email || typeof user.email === \"undefined\") {\n                                                    reject({ success: false, reason: facebookPermissionCodes.noEmailProvided });\n                                                    return;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                resolve({ success: true, authResponse: result.authResponse, userData: user });\n                            });\n                        }\n                        else {\n                            _this.fbLogin(resolve, reject);\n                        }\n                    });\n                };\n                this.login = function () {\n                    return new Promise(function (resolve, reject) {\n                        _this.isLoggedInAndAuthorized().then(function (result) {\n                            if (result.success) {\n                                resolve({\n                                    user: result.userData,\n                                    authResponse: result.authResponse\n                                });\n                            }\n                        }).catch(function (response) {\n                            reject(response);\n                        });\n                    });\n                };\n                this.rerequestPermission = function () {\n                    var rerequestPromise = new Promise(function (resolve, reject) {\n                        _this.rerequest(resolve, reject);\n                    });\n                    return new Promise(function (resolve, reject) {\n                        rerequestPromise\n                            .then(function (result) {\n                            if (result.success) {\n                                resolve({\n                                    user: result.userData,\n                                    authResponse: result.authResponse\n                                });\n                            }\n                            else {\n                                reject(result);\n                            }\n                        }).catch(function (response) {\n                            reject(response);\n                        });\n                    });\n                };\n            }\n            Facebook.init = function (initData) {\n                var _this = this;\n                Facebook.ignoreEmailPermissions = (initData.ignoreEmailPermissions) ? initData.ignoreEmailPermissions : false;\n                return new Promise(function (resolve) {\n                    if (!Facebook.initialized) {\n                        if (!Facebook.alreadyInitializing) {\n                            if (!initData) {\n                                throw new Error(\"You must provide details for connecting to FB app in your Init call.\");\n                            }\n                            var scriptTag = document.createElement(\"script\");\n                            scriptTag.src = _this.facebookSDKsrc;\n                            scriptTag.onload = Facebook.onLoadFinished;\n                            if (!initData.version) {\n                                initData.version = _this.initVersion;\n                            }\n                            if (!initData.scope) {\n                                initData.scope = \"email, public_profile\";\n                            }\n                            Facebook.setting = initData;\n                            var bodyTag = document.getElementsByTagName(\"body\")[0];\n                            bodyTag.appendChild(scriptTag);\n                            Facebook.alreadyInitializing = true;\n                        }\n                        var interval_1 = setInterval(function () {\n                            if (Facebook.initialized) {\n                                clearInterval(interval_1);\n                                resolve();\n                            }\n                        }, 200);\n                    }\n                    else {\n                        resolve();\n                    }\n                });\n            };\n            Facebook.onLoadFinished = function (e) {\n                FB.init({\n                    appId: Facebook.setting.appId.toString(),\n                    xfbml: false,\n                    cookie: true,\n                    status: true,\n                    version: Facebook.setting.version\n                });\n                Facebook.initialized = true;\n                FB.getLoginStatus(function (res) {\n                    Facebook.currentLoginStatus = res;\n                    Facebook.statusChanged();\n                });\n            };\n            Facebook.statusChanged = function () {\n                // ReSharper disable once UnusedLocals\n                var interval = setInterval(function () {\n                    FB.getLoginStatus(function (res) {\n                        Facebook.currentLoginStatus = res;\n                    });\n                }, 1000);\n            };\n            Facebook.prototype.checkLoginStatus = function () {\n                if (Facebook.currentLoginStatus != null) {\n                    var response = Facebook.currentLoginStatus;\n                    if (response.status === facebookStatusCodes.connected) {\n                        return { success: true, authResponse: response.authResponse };\n                    }\n                    else if (response.status === facebookPermissionCodes.notAuthorized) {\n                        return { success: false, reason: facebookPermissionCodes.notAuthorized };\n                    }\n                    else {\n                        return { success: false };\n                    }\n                }\n                else {\n                    return { success: false };\n                }\n            };\n            Facebook.prototype.userDetailsFromFb = function () {\n                return new Promise(function (resolve) {\n                    FB.api(\"/me\", { fields: \"name, email, permissions\" }, function (response) {\n                        resolve(response);\n                    });\n                });\n            };\n            Facebook.initialized = false;\n            Facebook.currentLoginStatus = null;\n            Facebook.alreadyInitializing = false;\n            Facebook.ignoreEmailPermissions = false;\n            Facebook.initVersion = \"v2.10\";\n            Facebook.facebookSDKsrc = \"//connect.facebook.net/en_US/sdk.js\";\n            return Facebook;\n        }());\n        Social.Facebook = Facebook;\n    })(Social = Channel.Social || (Channel.Social = {}));\n})(Channel || (Channel = {}));\n//# sourceMappingURL=facebook.js.map\n\n\n/// <reference path=\"../../../../../../Channel/Channel.Static/Scripts/Channel/classes/fetch.ts\" />\n/// <reference path=\"../classes/translations.ts\" />\nvar Digicel;\n(function (Digicel) {\n    var Social;\n    (function (Social) {\n        var Facebook = /** @class */ (function () {\n            function Facebook() {\n            }\n            Facebook.getAuthForm = function (facebookLoginResult) {\n                var authForm = {\n                    email: facebookLoginResult.user.email,\n                    fullName: facebookLoginResult.user.name,\n                    providerAuthenticationForm: {\n                        accessToken: facebookLoginResult.authResponse.accessToken,\n                        providerUserId: facebookLoginResult.authResponse.userID,\n                        tokenExpiry: facebookLoginResult.authResponse.expiresIn.toString()\n                    }\n                };\n                if (facebookLoginResult.user.iovationId === null || typeof facebookLoginResult.user.iovationId === \"undefined\") {\n                    var element = document.getElementById(\"iovationId\");\n                    if (element) {\n                        authForm.iovationId = element.value;\n                    }\n                }\n                else {\n                    authForm.iovationId = facebookLoginResult.user.iovationId;\n                }\n                return authForm;\n            };\n            Facebook.loginWithFacebook = function (requestPermission) {\n                if (requestPermission === void 0) { requestPermission = false; }\n                var loginPromise;\n                if (requestPermission) {\n                    loginPromise = this.facebook.rerequestPermission();\n                }\n                else {\n                    loginPromise = this.facebook.login();\n                }\n                return new Promise(function (resolve, reject) {\n                    loginPromise\n                        .then(function (result) {\n                        resolve(result);\n                    })\n                        .catch(function (error) {\n                        var response = { code: \"\" };\n                        if (error.reason) {\n                            switch (error.reason) {\n                                case \"no_email_provided\":\n                                case \"no_email_permission\":\n                                    response.code = \"no_email_provided\";\n                                    break;\n                                case \"cancel\":\n                                    response.code = \"cancel\";\n                                    break;\n                                case \"not_authorized\":\n                                    response.code = \"not_authorized\";\n                                    break;\n                            }\n                        }\n                        reject(response);\n                    });\n                });\n            };\n            Facebook.login = function (requestPermission) {\n                var _this = this;\n                if (requestPermission === void 0) { requestPermission = false; }\n                return this.loginWithFacebook(requestPermission)\n                    .then(function (response) {\n                    var authForm = _this.getAuthForm(response);\n                    return Social.Account.login(authForm, _this.socialProvider);\n                });\n            };\n            Facebook.register = function () {\n                var _this = this;\n                return this.loginWithFacebook()\n                    .then(function (response) {\n                    var authForm = _this.getAuthForm(response);\n                    return Social.Account.register(authForm, _this.socialProvider);\n                });\n            };\n            Facebook.link = function (userData) {\n                var _this = this;\n                return this.loginWithFacebook()\n                    .then(function (response) {\n                    var authForm = _this.getAuthForm(response);\n                    authForm.password = userData.password;\n                    return Social.Account.link(authForm, _this.socialProvider);\n                });\n            };\n            Facebook.connect = function (requestPermission) {\n                var _this = this;\n                if (requestPermission === void 0) { requestPermission = false; }\n                return this.loginWithFacebook(requestPermission)\n                    .then(function (response) {\n                    var authForm = _this.getAuthForm(response);\n                    return Social.Account.connect(authForm, _this.socialProvider);\n                });\n            };\n            Facebook.disconnect = function () {\n                return Social.Account.disconnect(this.socialProvider);\n            };\n            Facebook.initFacebookApi = function () {\n                var _this = this;\n                return new Promise(function (resolve, reject) {\n                    Channel.Social.Facebook\n                        .init({\n                        appId: Digicel.Social.facebookAppId,\n                        version: 'v2.7'\n                    })\n                        .then(function (response) {\n                        _this.facebook = new Channel.Social.Facebook();\n                        resolve({ success: true });\n                    })\n                        .catch(function (error) {\n                        reject(error);\n                    });\n                });\n            };\n            Facebook.socialProvider = Social.SocialMediaProviders.Facebook;\n            return Facebook;\n        }());\n        Social.Facebook = Facebook;\n    })(Social = Digicel.Social || (Digicel.Social = {}));\n})(Digicel || (Digicel = {}));\n//# sourceMappingURL=facebook.js.map",
			"settings":
			{
				"buffer_size": 16932,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"Snippet: ",
				"Snippet: React: componentWillUpdate: fn(np, ns) { ... }"
			],
			[
				"",
				"Package Control: List Packages"
			],
			[
				"syntax",
				"Set Syntax: HTML"
			]
		],
		"width": 464.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": true,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Christian AUGUSTYN/Documents/workspace/WebstormProjects/StuckWanYah",
		"/C/Users/Christian AUGUSTYN/Documents/workspace/WebstormProjects/StuckWanYah/instantgame"
	],
	"file_history":
	[
		"/C/Users/Christian AUGUSTYN/Documents/workspace/WebstormProjects/StuckWanYah/.gitignore",
		"/C/Users/Christian AUGUSTYN/Documents/workspace/WebstormProjects/StuckWanYah/instantgame/CLIENT-README.md",
		"/C/Users/Christian AUGUSTYN/Documents/workspace/WebstormProjects/StuckWanYah/instantgame/.gitignore",
		"/C/Users/Christian AUGUSTYN/Documents/workspace/WebstormProjects/StuckWanYah/views/privacy-policy.html",
		"/C/Users/Christian AUGUSTYN/Documents/workspace/WebstormProjects/fantastix/.env",
		"/C/Users/Christian AUGUSTYN/Documents/workspace/WebstormProjects/StuckWanYah/app/stylesheets/stylesheet.css",
		"/C/Users/Christian AUGUSTYN/Documents/workspace/WebstormProjects/StuckWanYah/package.json",
		"/C/Users/Christian AUGUSTYN/Documents/workspace/WebstormProjects/StuckWanYah/config/keys.js",
		"/C/Users/Christian AUGUSTYN/Documents/workspace/WebstormProjects/StuckWanYah/README.md",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/api_fb.html",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/package.json",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/StuckWanYah/mobile.html",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/crisbot/server/lib/somekind_of_algorithm.js",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/instantgame/index.html",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/views/upload.html",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/app/stylesheets/stylesheet.css",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/.gitignore",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/photos.json",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/views/connect.html",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/views/disclaimer.html",
		"/C/Users/Christian AUGUSTYN/.VirtualBox/VirtualBox.xml",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/.env",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/StuckWanYah/phone_avatar.svg",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/StuckWanYah/api_fb.html",
		"/C/Users/Christian AUGUSTYN/Documents/MCS/year1/semester2/MC120/Major Project/PayrollSystem/src/payrollsystem/PayrollSystemGUI.java",
		"/C/Users/Christian AUGUSTYN/Documents/MCS/year1/semester2/MC120/Major Project/PayrollSystem/src/payrollsystem/AddEmployeePanel.java",
		"/C/Users/Christian AUGUSTYN/Documents/MCS/year1/semester2/MC120/Major Project/PayrollSystem/src/payrollsystem/PayrollSystemGUI.form",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/config/keys.js",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/chat/chatme-mobile/server/routes/api.js",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/chat/chatme-mobile/server/routes/auth.js",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/chat/chatme-mobile/server/routes/index.js",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/chat/chatme-mobile/server/routes/products.js",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/chat/chatme-mobile/server/routes/shippingDetails.js",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/chat/chatme-mobile/server/routes/users.js",
		"/C/Program Files/nodejs/node_modules/npm/lib/npm.js",
		"/C/Program Files/nodejs/node_modules/npm/lib/utils/error-handler.js",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/StuckWanYah/server.js",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/README.md",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/StuckWanYah/package.json",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/server.js",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/xpackage.json",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/models/sweetlips.js",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/views/home.html",
		"/C/xampp/htdocs/christianaugustyn/public/js/application.js",
		"/C/Program Files (x86)/nginx/conf/nginx.conf",
		"/C/Users/Christian AUGUSTYN/Documents/Fiddler2/Scripts/BrowserPAC.js",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/hacking-cracking-tools/ZykNet/LearnC/main.c",
		"/C/Program Files/Git/usr/share/vim/vim82/compiler/cucumber.vim",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/test.bat",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/views/perfectMatch.html",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/epsilonpi/.env",
		"/C/Users/Christian AUGUSTYN/Desktop/Tor Browser/Browser/tbb_version.json",
		"/C/Program Files (x86)/MongoDB/Server/3.2/bin/mongodb.config",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/stuckwanyah/StuckWanYahProject.sublime-project",
		"/C/Users/Christian AUGUSTYN/WebstormProjects/hacking-cracking-tools/.vs/slnx.sqlite",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/README.md",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/package.json",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/views/upload.html",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/views/submit.html",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/views/rankings.html",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/views/perfectMatch.html",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/views/friends.html",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/views/flames.html",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/views/connect.html",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/views/about.html",
		"/C/xampp/htdocs/wordpress/wp-includes/SimplePie/HTTP/Parser.php",
		"/C/Users/Wantok/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/C/Users/Wantok/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/C/Users/Wantok/AppData/Roaming/Sublime Text 2/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/Wantok/AppData/Roaming/Sublime Text 2/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/Wantok/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript.sublime-settings",
		"/C/Users/Wantok/Downloads/jerard pdf's/National Examination Results 2018_files/bootstrap.css",
		"/C/Users/Wantok/WebstormProjects/chat/config/dbDump/contacts.db",
		"/C/Program Files/Ampps/php-5.6/ext/php_openssl.dll",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/.gitignore",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/app/routes.js",
		"/C/xampp/htdocs/xampp/.version",
		"/C/Users/Wantok/WebstormProjects/chat/app/assets/images/loader.svg",
		"/C/Users/Wantok/Documents/New folder/autorun.inf",
		"/E/AUTORUN.INF",
		"/J/Temp/.autorun.inf",
		"/J/Temp/Computer Science/eBooks/Networking/CCNA_ 3.0/CCNA/CCNA1_v30/en_CCNA1_v30/javascript/buttons.js",
		"/C/Users/Wantok/Documents/New folder/Brand/techsavvy-oeminfo.reg",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/views/home.html",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/public/javascripts/script.js",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/models/sweetlips-model.js",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/photos.js",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/api.js",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/public/javascripts/emoji.js",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/config/passport-setup.js",
		"/C/xampp/htdocs/facemash/folder.bat",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/post.yaml",
		"/C/Users/Wantok/AppData/Local/Google/Chrome/User Data/Default/Extensions/iffdacemhfpnchinokehhnppllonacfj/6.4_0/js/libs/bootstrap-modal-master/bs3.html",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/public/javascripts/javascript.js",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/public/javascripts/scratchpad.js",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/views/disclaimer.html",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/views/index.ejs",
		"/C/Users/Wantok/WebstormProjects/node_modules/node-notifier/vendor/snoreToast/SnoreToast.exe",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/app.js",
		"/C/Users/Wantok/WebstormProjects/chat/app/assets/home.svg",
		"/C/Users/Wantok/Documents/workspace/ChatMe/assets/ChatMe Setup.txt",
		"/C/Users/Wantok/Documents/workspace/ChatMe/MongoDB.txt",
		"/C/Users/Wantok/Documents/workspace/ChatMe/ChatMe App Structure.txt",
		"/C/Users/Wantok/Documents/workspace/ChatMe/ChatMe.txt",
		"/C/Users/Wantok/Documents/workspace/ChatMe/ReadMe.txt",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/views/Disclaimer.html",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/app2.js",
		"/C/Program Files/MongoDB/Server/3.2/bin/mongodb.config",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/StuckWanYahProject.sublime-project",
		"/C/Users/Admin/AppData/Local/Temp/Rar$EX79.536/faceclash-master/assets/js/faceclash.js",
		"/C/Users/Wantok/WebstormProjects/StuckWanYah/server.js",
		"/C/Users/Admin/WebstormProjects/StuckWanYah/public/javascripts/script.js",
		"/C/Users/Admin/WebstormProjects/StuckWanYah/StuckWanYah.url",
		"/C/Users/Admin/WebstormProjects/StuckWanYah/post.yaml",
		"/C/Users/Admin/WebstormProjects/StuckWanYah/models/sweetlips-model.js",
		"/C/Users/Admin/WebstormProjects/StuckWanYah/config.js",
		"/C/Users/Admin/WebstormProjects/StuckWanYah/photos.js",
		"/C/Users/Admin/AppData/Local/Temp/Rar$EX05.024/faceclash-master/assets/js/faceclash.js",
		"/C/Users/Admin/WebstormProjects/StuckWanYah/views/disclaimer.html",
		"/C/Users/Admin/WebstormProjects/StuckWanYah/views/about.html",
		"/C/Users/Admin/WebstormProjects/StuckWanYah/package.json",
		"/C/Users/Admin/WebstormProjects/StuckWanYah/algorithm.js",
		"/C/Users/Admin/WebstormProjects/StuckWanYah/app-dev.js",
		"/C/Users/Admin/WebstormProjects/StuckWanYah/views/submit.html",
		"/C/Users/Admin/WebstormProjects/StuckWanYah/views/friends.html",
		"/C/Users/Admin/WebstormProjects/StuckWanYah/views/rankings.html",
		"/C/Users/Admin/WebstormProjects/StuckWanYah/views/connect.html",
		"/C/Users/Admin/WebstormProjects/StuckWanYah/node_modules/fb/README.md"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"merge",
			"colors",
			"h1",
			"p",
			"isAuthenticated",
			"morgan",
			"user_id",
			"isAuthenticated",
			"user_id",
			"populate",
			"sourceDirectory",
			"\t\t\t\t\t\t  ",
			"\t\t\t  ",
			"\t\t\t\t    ",
			"getNativeIdFromImageId",
			"rateImages",
			"getTwoRandomPhotos",
			"renderIndexPage",
			"srcset=\"<%= images[",
			"src=\"http://graph.",
			"http://graph.facebook.com/<%= images[0].imageId %>/picture?type=large",
			"getUserProfilePicture",
			"https://graph.facebook.com/",
			"https://graph.facebook.com/100004177278169",
			"data-profileid=\"",
			"getNativeIdFromImageId",
			"config.params.session.user_id",
			"getNativeIdFromImageId",
			"?type=square",
			"setDefaultData",
			"checkLoginState",
			"profile",
			"bodyObj.data[i].picture.data.url",
			"bodyObj.data[i]",
			"populate",
			"obj.data[i].age_range",
			"bodyObj",
			"String",
			"\t\t\t\t    ",
			"\t\t\t    ",
			"Photos",
			"photos",
			"Photos",
			"photos",
			"Photos",
			" ",
			"request.get",
			"user",
			"4680b2de-8690-11e9-b83d-5719e53cf1de",
			"478",
			"478a",
			"478",
			"6327",
			"data",
			"m.f",
			".update",
			"rateImages",
			"getNativeIdFromImageId",
			"votes for",
			"update",
			"fblogin",
			"resp",
			"JSON.parse(body)",
			"usersFromList",
			"_usersFromList",
			"populatePhotos",
			"_prepareUserData",
			"getUserDetailsFromFacebook",
			"ad",
			"access_token",
			"access",
			"EAAZAdDi7fMz8BAEwpZBRu8ICMKFNIU5VdLUIqvC0d4eZC9j1kE3WkKcGyL5xLzcQwBecZCrUrqkcewQQcwAdEn4KZCtIULRyFVPK5uxY3m8axtsUvRem3xQoL9xXtiR2ZCbN86ZAVV5Mwa1uOiqLiuiwzIyVOmPOhidqLDZCvOauFh9YRDQIgFBqe8h8xSosRFf3gtZC6hvxqg9hTkLJd5y0PKFD8ar1BmvuwEbCwV0qclhOjZAs38HPKA",
			"jDialog",
			"jDialog1",
			"jTextField2",
			"layout.",
			"layout",
			"jDialog1",
			"setSize",
			"jCheckBoxMondayActionPerformed",
			"panel",
			"jTable1MouseClicked",
			"jTable1MousePressed",
			"jButton1ActionPerformed",
			"jCheckBoxMondayActionPerformed",
			"jCheckBoxMondayPropertyChange",
			"addGroup",
			"jTable1MousePressed",
			"jRadioButton",
			"javax.swing.",
			"_fields",
			"getUserDetailsFromFacebook",
			"friend",
			"\t\t  ",
			"\t  ",
			"\n\t  ",
			"multer",
			".count",
			"export",
			"logSymbols",
			"StuckWanYahProject",
			"port",
			"initFacebookApi",
			"FB.init",
			"$.ajax",
			"blackhole",
			"FB.api",
			"userDetailsFromFb",
			"FB.api(",
			"FB.api",
			"FB.",
			"\t\t\t\t\t",
			"\t\t\t\t\t \t",
			"FB.api",
			"userDetailsFromFb",
			"FB.api(",
			"checkLoginState",
			"statusChangeCallback",
			"login()",
			"login",
			"statusChangeCallback",
			"initFacebookApi",
			"facebookStatusCodes",
			"\t\t\t\t\t \t",
			"checkLoginState",
			"initClickEventListener",
			"100012306993722",
			"Publish"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 86520,
						"regions":
						{
						},
						"selection":
						[
							[
								1173,
								1178
							],
							[
								1230,
								1235
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2131,
						"regions":
						{
						},
						"selection":
						[
							[
								656,
								656
							]
						],
						"settings":
						{
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 173,
						"regions":
						{
						},
						"selection":
						[
							[
								173,
								173
							]
						],
						"settings":
						{
							"syntax": "Packages/Git Formats/Git Ignore.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": ".env",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1613,
						"regions":
						{
						},
						"selection":
						[
							[
								350,
								350
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "views/home.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6134,
						"regions":
						{
						},
						"selection":
						[
							[
								1710,
								1710
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 411.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "app/javascripts/script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 54392,
						"regions":
						{
						},
						"selection":
						[
							[
								40748,
								40741
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 15569.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3808,
						"regions":
						{
						},
						"selection":
						[
							[
								1616,
								1616
							]
						],
						"settings":
						{
							"auto_name": "var express = require('express');",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 522.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "README.md",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3879,
						"regions":
						{
						},
						"selection":
						[
							[
								2086,
								2086
							]
						],
						"settings":
						{
							"mde.match_heading_hashes": false,
							"syntax": "Packages/MarkdownEditing/syntaxes/Markdown.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16247,
						"regions":
						{
						},
						"selection":
						[
							[
								512,
								512
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14486,
						"regions":
						{
						},
						"selection":
						[
							[
								409,
								409
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16932,
						"regions":
						{
						},
						"selection":
						[
							[
								11365,
								11365
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3060.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 37.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 234.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 100.0
	},
	"pinned_build_system": "",
	"project": "StuckWanYahProject.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Users\\Christian AUGUSTYN\\Documents\\workspace\\WebstormProjects\\StuckWanYah\\views\\Fantastix Website.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 298.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
